import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-VKLC1A-x.js";const p="/mynotes/assets/view01-hQfFESmi.jpg",e={},o=t(`<h1 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h1><h2 id="css概述" tabindex="-1"><a class="header-anchor" href="#css概述" aria-hidden="true">#</a> CSS概述</h2><p>CSS是Cascading Style Sheets的首字母缩写，意思是层叠样式表。其目的是为了让网页元素的样式更加丰富，也为了让网页的内容和样式能拆分开，以此达到HTML只负责文档的结构和内容，表现形式完全交给CSS，使HTML文档变得更加简洁的目的</p><h2 id="css基本语法及页面引用" tabindex="-1"><a class="header-anchor" href="#css基本语法及页面引用" aria-hidden="true">#</a> CSS基本语法及页面引用</h2><ul><li><p><strong>CSS基本语法</strong></p><p>CSS的定义方法是：<code>选择器{属性: 值; 属性: 值;}</code></p><p>选择器是将页面元素关联起来的名称，属性是希望设置的样式属性，每个属性有一个或多个值。示例如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
	<span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
	<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>CSS的注释</strong></p><p><code>/*这是CSS的注释*/</code></p></li><li><p><strong>CSS页面的引入</strong></p><ul><li><p>***外联式：***在HTML文档的head中，通过<code>&lt;link /&gt;</code>标签，链接外部样式表到页面中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./css/main.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>***嵌入式：***在HTML文档的head中，通过<code>&lt;style&gt;&lt;/style&gt;</code>标签，在网页上创建嵌入的样式表</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    h1{
        font-size: 25px;
        color: gold;
    }
&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><em><strong>行内样式：<em><strong>在HTML文档的body中，通过标签的</strong></em>style属性</strong></em>，在标签上直接写样式</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="常用文本样式" tabindex="-1"><a class="header-anchor" href="#常用文本样式" aria-hidden="true">#</a> 常用文本样式</h2><p><em><strong>color</strong></em>：设置文字的颜色，如：<code>color: red;</code></p><ul><li><p>颜色表示方法：</p><ul><li><p>颜色名表示，如：<code>color: red;</code></p></li><li><p>RGB表示，如：<code>color: rgb(0, 255, 0);</code></p></li><li><p>十六进制表示（常用），如：<code>color: #0000ff;</code></p></li></ul></li></ul><p><em><strong>font-size</strong></em>：设置文字的大小，如：<code>font-size: 12px;</code></p><p><em><strong>font-family</strong></em>：设置文字的字体，如：<code>font-family: &#39;楷体&#39;;</code>，一般用英文：<code>font-family: &#39;Kaiti&#39;;</code></p><p><em><strong>font-style</strong></em>：设置文字是否倾斜，不倾斜：<code>font-style: &#39;normal&#39;;</code>，倾斜：<code>font-style: &#39;italic&#39;;</code></p><p><em><strong>font-weight</strong></em>：设置文字是否加粗，加粗：<code>font-weight: bold;</code>，不加粗：<code>font-weight: normal;</code></p><p><em><strong>line-height</strong></em>：设置文字的行高，设置行高相当于在每行文字的上下同时加间距，如：<code>line-height: 24px;</code></p><p><em><strong>font</strong></em>：同时设置文字的几个属性，先后顺序有兼容问题，建议按照以下顺序写：font: 是否加粗 字号/行高 字体;如：<code>font: normal 12px/36px &#39;Kaiti&#39;;</code></p><p><em><strong>text-decoration</strong></em>：设置文字的下划线，去掉下划线：<code>text-decoration: none;</code>，增加下划线：<code>text-decoration: underline;</code></p><p><em><strong>text-indent</strong></em>：设置文字首行缩进，如：<code>text-indent: 24px;</code>设置文字首行缩进24px</p><p><em><strong>text-align</strong></em>：设置文字水平对齐方式，如：<code>text-align: center;</code>设置文字水平居中</p><h2 id="css选择器" tabindex="-1"><a class="header-anchor" href="#css选择器" aria-hidden="true">#</a> CSS选择器</h2><ul><li><p>**标签选择器：**根据标签进行选择，影响范围大，建议尽量应用在层级选择器中</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>*{margin: 0;padding: 0}
div{color: red}   

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>   <span class="token comment">&lt;!-- 对应以上两条样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>   <span class="token comment">&lt;!-- 对应以上两条样式 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>*</code>标签会将样式应用到所有的标签上</p></li><li><p><strong>id选择器</strong>：通过id名来选择元素，元素的id名称不能重复，所以一个样式设置项只能对应于页面上一个元素，不能复用，id名一般给程序使用，所以不推荐使用id作为选择器</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>#box{color: red} 

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>   <span class="token comment">&lt;!-- 对应以上一条样式，其它元素不允许应用此样式 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>***注：***样式设置时，后面的样式会覆盖前面的样式，但是这一现象往往对id选择器无效，因为id选择器的权重较高，和其他选择器同时应用于同一内容时，会使用id选择器设置的样式</p></li><li><p><strong>类选择器</strong>：通过类名来选择元素，一个类可应用于多个元素，一个元素上也可以使用多个类，应用灵活，可复用，是CSS中应用最多的一种选择器</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>.red{color: red}
.big{font-size: 20px}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 使用.red中的样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red big<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 使用.red和.big中的样式 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>层级选择器</strong>：主要应用在选择父元素下的子元素，或者子元素下面的子元素，可与标签元素结合使用，减少命名，同时也可以通过层级，防止命名冲突</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>.box span{color: red}  /*只对应用了.box样式下的span有影响，不影响其他的span*/
.box .red{color: pink}
.red{color: red}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 应用的是.box .red中的样式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 应用的是.red中的样式 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>组选择器</strong>：多个选择器如果有同样的样式设置，可以使用组选择器</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>.box1,.box2,.box3{width: 100px;height: 100px}
.box1{background: red}
.box2{background: pink}
.box2{background: gold}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>伪类及伪元素选择器</strong>：常用的伪类选择器有hover，表示鼠标悬浮在元素上方时的状态；伪元素选择器有before和after,它们可以通过样式在元素中插入内容</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>.box1: hover{color: red}
.box2: before{content: &#39;行首文字&#39;;}
.box3: after{content: &#39;行尾文字&#39;;}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="盒子模型" tabindex="-1"><a class="header-anchor" href="#盒子模型" aria-hidden="true">#</a> 盒子模型</h2><p>元素在页面中显示成一个方块，类似一个盒子，CSS盒子模型就是使用现实中盒子来做比喻，帮助我们设置元素对应的样式。盒子模型示意图如下：</p><img src="`+p+`" alt="盒子模型" style="zoom:80%;"><ul><li><p><strong>设置宽高</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token comment">/* 设置盒子的宽度，此宽度是指盒子内容的宽度，不是盒子整体宽度(难点) */</span> 
<span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token comment">/* 设置盒子的高度，此高度是指盒子内容的高度，不是盒子整体高度(难点) */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>设置边框border</strong></p><p>边框常用的线型有：solid（实线），dashed（虚线），dotted（点线）</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-top-width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token property">border-top-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token property">border-top-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>
<span class="token property">border-top</span><span class="token punctuation">:</span> 10px solid blue<span class="token punctuation">;</span>  <span class="token comment">/*简写为一句，元素的先后顺序没有影响*/</span>
<span class="token property">border</span><span class="token punctuation">:</span> 10px solid #00ff00<span class="token punctuation">;</span>  <span class="token comment">/*四边一致可以使用这种写法*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>设置内间距padding</strong></p><p>内间距是指盒子中的内容距离边框的宽度</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token property">padding-right</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
<span class="token property">padding-bottom</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>
<span class="token property">padding-left</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
<span class="token property">padding</span><span class="token punctuation">:</span> 20px 40px 60px 80px<span class="token punctuation">;</span>  <span class="token comment">/*从上边开始，顺时针书写，表示的是上、右、下、左的内间距*/</span>
<span class="token property">padding</span><span class="token punctuation">:</span> 20px 40px 60px<span class="token punctuation">;</span>       <span class="token comment">/*3个值表示的是上边、左右、下边的内间距*/</span>
<span class="token property">padding</span><span class="token punctuation">:</span> 20px 40px<span class="token punctuation">;</span>            <span class="token comment">/*2个值表示的是上下、左右的内间距*/</span>
<span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>                 <span class="token comment">/*1个值表示四边内间距相等*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>设置外间距margin</strong></p><p>外间距指的是盒子边框距离浏览器页面边框或者距离其他盒子边框的宽度，设置方法和padding相同</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token property">margin-bottom</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>
<span class="token property">margin</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>盒子的<strong>真实尺寸</strong>计算公式：</p><p><em><strong>盒子宽度</strong></em> = width + padding左右 + border左右</p><p><em><strong>盒子高度</strong></em> = height + padding上下 + border上下</p><p>***注：**<em>左右、上下的padding和border可能并不相等，计算时不能简单地</em>2</p><h2 id="盒子模型使用技巧及相关问题" tabindex="-1"><a class="header-anchor" href="#盒子模型使用技巧及相关问题" aria-hidden="true">#</a> 盒子模型使用技巧及相关问题</h2><ul><li><p><strong>margin相关技巧</strong></p><ul><li><p>设置元素水平居中：<code>margin:xpx auto;</code>（两个值表示上下宽度是xpx，左右自动计算居中）</p></li><li><p>margin负值实现让元素位移及边框合并</p><p>***注：***HTML文档的body四周默认拥有8px的margin，想要让元素贴边需要先把其更改为0</p></li></ul></li><li><p><strong>垂直margin合并</strong></p><p>垂直margin合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距中高度的较大者。解决方法如下：</p><ul><li><p>使用这种特性</p></li><li><p>只设置一边的外边距，一般设置margin-top</p></li><li><p>将元素浮动或者定位</p></li></ul><p>***注：***水平margin不会合并</p></li><li><p><strong>margin-top塌陷</strong></p><p>在两个盒子嵌套时候，内部的盒子设置的margin-top会加到外部的盒子上，导致内部盒子的margin-top设置失败，解决方法如下：</p><ul><li><p>外部盒子设置边框</p></li><li><p>外部盒子设置<code>overflow: hidden;</code></p></li><li><p>外部盒子增加伪元素类：</p></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix:before</span><span class="token punctuation">{</span>
	<span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
	<span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>***注：***水平方向不存在塌陷问题</p></li><li><p><strong>元素溢出</strong></p><p>当子元素的尺寸超过父元素的尺寸时，需要设置父元素显示溢出的子元素的方式，设置的方法是通过<em><strong>overflow属性</strong></em>来设置。</p><ul><li><code>overflow: visible;</code>默认值，溢出内容不被修剪，会显示在元素框外面</li><li><code>overflow: hidden;</code>会修剪内容，溢出部分不被显示；还有清除浮动、清除margin-top塌陷的功能</li><li><code>overflow: scroll;</code>无论内容是否溢出，都会增加上下和左右的滚动条</li><li><code>overflow: auto;</code>会根据是否溢出，自动判断是否增加滚动条</li><li><code>overflow: inherit;</code>规定应该从父元素中继承overflow属性的值</li></ul></li></ul><h2 id="元素类型" tabindex="-1"><a class="header-anchor" href="#元素类型" aria-hidden="true">#</a> 元素类型</h2><p>元素就是标签，布局中常用的有三种标签：块元素、内联元素、内联块元素</p><ul><li><p><strong>块元素</strong></p><p>块元素，也可以称为行元素，布局中常用的标签如：<code>div</code>、<code>p</code>、<code>ul</code>、<code>li</code>、<code>h1~h6</code>、<code>dl</code>、<code>dt</code>、<code>dd</code>等都是块元素。它们在布局中的特点有：</p><ul><li>支持全部的样式</li><li>如果没有设置宽度，默认的宽度为父级宽度的100%</li><li>盒子占据一行，即使设置了宽度</li></ul></li><li><p><strong>内联元素</strong></p><p>内联元素，也可以称为行内元素，布局中常用的标签如：<code>a</code>、<code>span</code>、<code>em</code>、<code>b</code>、<code>strong</code>、<code>i</code>等都是内联元素。它们在布局中的特点有：</p><ul><li>只支持部分样式（不支持宽、高、margin上下、padding上下）</li><li>宽高由内容决定</li><li>盒子并在一行</li><li>代码换行，盒子之间会产生间距</li><li>子元素是内联元素，父元素可以用<code>text-align</code>属性设置子元素的水平对齐方式</li></ul><p>去除内联元素间隙的方法：</p><ul><li>去掉内联元素之间的换行</li><li>将内联元素父级的font-size设置为0，内联元素自身再设置font-size</li></ul></li><li><p><strong>内联块元素</strong></p><p>内联块元素，也叫行内块元素，是新增的元素类型，现有元素没有归于此类别的，<code>img</code>和<code>input</code>元素的行为类似这种元素，但是也归类于内联元素。可以用<em><strong>display属性</strong></em>将块元素或者内联元素转化成内联块元素。它们在布局中的特点有：</p><ul><li>支持全部样式，并且margin上下左右都不合并</li><li>可以设置宽高，不设置将由内容决定</li><li>盒子并在一行</li><li>代码换行，盒子会产生间距，去除方法同内联元素一样</li><li>子元素是内联块元素，父元素可以用<code>text-align</code>属性设置子元素的水平对齐方式</li></ul></li></ul><p>这三种元素，可以通过display属性来相互转化，不过实际开发中，块元素用得比较多，所以我们经常把内联元素转化为块元素，少量转化为内联块，而要使用内联元素时，直接使用内联元素，而不用块元素转化了。</p><ul><li><p><strong>display属性</strong></p><p>display属性是用来设置元素的类型或隐藏的，常用的属性有：</p><ul><li><code>display: none;</code>元素隐藏且不占位置</li><li><code>display: block;</code>元素以块元素显示</li><li><code>display: inline;</code>元素以内联元素显示</li><li><code>display: inline-block;</code>元素以内联块元素显示</li></ul></li></ul><h2 id="浮动" tabindex="-1"><a class="header-anchor" href="#浮动" aria-hidden="true">#</a> 浮动</h2><ul><li><p><strong>浮动的特性</strong></p><ul><li>浮动元素有左浮动<code>float:left</code>和右浮动<code>float:right</code>两种</li><li>浮动的元素会向左或向右浮动，碰到父元素的边界或其他元素才停下来</li><li>相邻浮动的块元素可以并在一行，超出父级宽度就换行，四周的margin都不会合并</li><li>浮动让行内元素或块元素自动转化为行内块元素（此时不会产生行内块元素间隙问题）</li><li>排在浮动元素后面没有浮动的元素会占据浮动元素的位置，并显示在浮动元素底层；如果没有浮动的元素内部有文字，那么文字会避开浮动的元素，形成文字绕图的效果</li><li>父元素如果没有设置尺寸（一般是高度不设置），父元素内整体浮动的元素无法撑开父元素，父元素需要清除浮动</li><li>浮动元素之间没有垂直margin的合并</li></ul></li><li><p><strong>清除浮动</strong></p><ul><li><p>父级元素增加<code>overflow: hidden;</code>属性</p></li><li><p>在最后一个子元素的后面加一个空的div，并把它的style属性设置为<code>clear:both</code>（不推荐）</p></li><li><p>父元素增加成熟的清除浮动的样式类，clearfix：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix:after</span><span class="token punctuation">{</span>
	<span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
	<span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
	<span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>clearfix的完整写法，解决margin-top塌陷和清除浮动：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix:before,.clearfix:after</span><span class="token punctuation">{</span><span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.clearfix:after</span><span class="token punctuation">{</span><span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.clearfix</span><span class="token punctuation">{</span><span class="token property">zoom</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token comment">/*为了兼容IE浏览器，zoom表示缩放*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="定位" tabindex="-1"><a class="header-anchor" href="#定位" aria-hidden="true">#</a> 定位</h2><p><strong>文档流</strong>，是指盒子按照HTML标签编写的顺序依次从上到下，从左到右排列，块元素占一行，行内元素在一行之内从左到右排列，先写的先排列，后写的排在后面，每个盒子都占据自己的位置</p><ul><li><p><strong>关于定位</strong></p><p><em><strong>position属性</strong></em>可以设置元素的定位类型，其设置项如下：</p><ul><li><code>position: relative;</code>生成相对定位元素，元素占据的文档流位置会被保存，元素本身相对于自身原位置进行偏移</li><li><code>position: absolute;</code>生成绝对定位元素，元素脱离文档流，不占据文档流的位置，偏移位置是相对于上一个设置了定位的父级元素来进行定位的，如果找不到，则相对于body元素进行定位</li><li><code>position: fixed;</code>生成固定定位元素，元素脱离文档流，不占据文档流的位置，偏移位置是相对于浏览器窗口进行定位的，即便父级元素设置了定位也不影响</li><li><code>position: static;</code>默认值，没有定位，元素正常出现在文档流中</li><li><code>position: inherit;</code>从父级元素中继承position属性的值</li></ul></li><li><p><strong>定位元素的偏移</strong></p><p>定位元素想要实现偏移还需要用<code>left</code>、<code>right</code>、<code>top</code>或<code>bottom</code>来设置相对于参照元素的偏移值</p></li><li><p><strong>定位元素的层级</strong></p><p>定位元素是浮动在正常的文档流之上的，可以用<em><strong>z-index属性</strong></em>来设置元素的层级。默认情况下代码越在后面层级越高（越显示在顶层），设置的z-index属性值越大，层级也越高</p></li><li><p><strong>定位元素的特性</strong></p><p>绝对定位和固定定位的块元素和行内元素会自动转化为行内块元素</p></li></ul><h2 id="background属性" tabindex="-1"><a class="header-anchor" href="#background属性" aria-hidden="true">#</a> background属性</h2><p>background属性的作用是给盒子设置背景图片和背景颜色</p><p>background是一个复合属性，它可以分解成如下几个设置项：</p><ul><li><p><code>background-color</code>：设置背景颜色，如：<code>background-color: cyan;</code></p></li><li><p><code>background-image</code>：设置背景图片地址，如：<code>background-image: url(images/bg.jpg);</code></p></li><li><p><code>background-repeat</code>：设置背景图片如何重复平铺</p><ul><li><code>background-repeat: repeat;</code>默认值，范围内全部平铺</li><li><code>background-repeat: repeat-x;</code>只在x轴方向进行平铺</li><li><code>background-repeat: repeat-y;</code>只在y轴方向进行平铺</li><li><code>background-repeat: no-repeat;</code>只平铺一次</li></ul></li><li><p><code>background-position</code>：设置背景图片的位置</p><p>background-position需要设置两个值，第一个值表示水平方向，第二个值表示垂直方向</p><ul><li><p>水平方向：left center right</p><p>垂直方向：top center bottom</p><p>共有9种组合，默认在左上角</p></li><li><p>background-position还支持设置具体数值，正负都可以；以及数值和单词组合，如：<code>background-position: right -10px;</code></p></li></ul></li><li><p><code>background-attachment</code>：设置背景图片是固定还是随页面滚动条滚动。背景图片默认会随页面滚动，使用<code>background-attachment: fixed;</code>可以使背景固定不动</p></li></ul><p>background属性支持合并书写（顺序不限，使用空格隔开），如：<code>background: url(images/bg.jpg) 20px 10px no-repeat cyan;</code>不写的设置项将使用默认值</p>`,44),l=[o];function c(i,u){return s(),a("div",null,l)}const k=n(e,[["render",c],["__file","02_CSS.html.vue"]]);export{k as default};
