import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-VKLC1A-x.js";const p="/mynotes/assets/numpy中的布尔索引-KmNipWdd.png",e="/mynotes/assets/numpy中的三元运算符-SFotxD-U.png",o="/mynotes/assets/numpy中的clip-lo2o681I.png",c={},u=t(`<h1 id="numpy模块" tabindex="-1"><a class="header-anchor" href="#numpy模块" aria-hidden="true">#</a> numpy模块</h1><p><strong>numpy</strong>：一个在Python中做科学计算的基础库，重在数值计算，也是大部分Python科学计算库的基础库，多用于在大型、多维数组上执行数值运算</p><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><h3 id="创建数组" tabindex="-1"><a class="header-anchor" href="#创建数组" aria-hidden="true">#</a> 创建数组</h3><p>可以使用<code>numpy</code>的<code>array()</code>、<code>array(range())</code>、<code>arange()</code>方法创建数组，其中<code>arange()</code>相当于<code>array(range())</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t1:&#39;</span><span class="token punctuation">,</span> t1<span class="token punctuation">)</span>  <span class="token comment"># t1: [1 2 3]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;type(t1):&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># type(t1): &lt;class &#39;numpy.ndarray&#39;&gt;</span>
t2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t2:&#39;</span><span class="token punctuation">,</span> t2<span class="token punctuation">)</span>  <span class="token comment"># t2: [0 1 2 3]</span>
<span class="token comment"># arange()相当于array(range())</span>
t3 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t3:&#39;</span><span class="token punctuation">,</span> t3<span class="token punctuation">)</span>  <span class="token comment"># t3: [0 1 2 3]</span>
t4 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t4:&#39;</span><span class="token punctuation">,</span> t4<span class="token punctuation">)</span>  <span class="token comment"># t4: [2 5 8]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组的数据类型" tabindex="-1"><a class="header-anchor" href="#数组的数据类型" aria-hidden="true">#</a> 数组的数据类型</h3><ul><li><p><strong>查看、设置、修改数组的数据类型</strong></p><p><em><strong>1&gt;</strong></em> 使用数组对象的<code>dtype</code>属性可以查看数组的数据类型</p><p><em><strong>2&gt;</strong></em> 创建数组时使用<code>dtype</code>参数可以设置数组的数据类型</p><p><em><strong>3&gt;</strong></em> 使用数组对象的<code>astype()</code>方法可以修改数组的数据类型，原数组不变，返回一个修改后的新数组</p><p><em><strong>4&gt;</strong></em> 使用<code>np.round()</code>可以修改数组中浮点数的小数位数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token triple-quoted-string string">&quot;&quot;&quot;查看数组的数据类型&quot;&quot;&quot;</span>
t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>  <span class="token comment"># int32</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;设置数组的数据类型&quot;&quot;&quot;</span>
<span class="token comment"># 以下三种方法设置的结果是相同的：float16，[1. 4. 7.]</span>
t2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;float16&#39;</span><span class="token punctuation">)</span>
t3 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float16<span class="token punctuation">)</span>
t4 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;f2&#39;</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;修改数组的数据类型&quot;&quot;&quot;</span>
t5 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;bool&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t5<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> t5<span class="token punctuation">)</span>  <span class="token comment"># bool [ True False  True False  True]</span>
t6 <span class="token operator">=</span> t5<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int8<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t6<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> t6<span class="token punctuation">)</span>  <span class="token comment"># int8 [1 0 1 0 1]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t5<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> t5<span class="token punctuation">)</span>  <span class="token comment"># bool [ True False  True False  True]</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;修改数组中浮点数的小数位数&quot;&quot;&quot;</span>
t7 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t7<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> t7<span class="token punctuation">)</span>  <span class="token comment"># float64 [0.7459032  0.7121498  0.70406119]</span>
t8 <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span>t7<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t8<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> t8<span class="token punctuation">)</span>  <span class="token comment"># float64 [0.75 0.71 0.7 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>数组常见的数据类型</strong></p><table><thead><tr><th><strong>类型</strong></th><th><strong>类型代码</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>int8、uint8</td><td>i1、u1</td><td>有符号和无符号的8位（1个字节）整型</td></tr><tr><td>int16、uint16</td><td>i2、u2</td><td>有符号和无符号的16位（2个字节）整型</td></tr><tr><td>int32、uint32</td><td>i4、u4</td><td>有符号和无符号的32位（4个字节）整型</td></tr><tr><td>int64、uint64</td><td>i8、u8</td><td>有符号和无符号的64位（8个字节）整型</td></tr><tr><td>float16</td><td>f2</td><td>半精度浮点数</td></tr><tr><td>float32</td><td>f4或f</td><td>标准的单精度浮点数，与C的float兼容</td></tr><tr><td>float64</td><td>f8或d</td><td>标准的双精度浮点数，与C的double和Python的float对象兼容</td></tr><tr><td>float128</td><td>f16或g</td><td>扩展精度浮点数</td></tr><tr><td>complex64、complex128、complex256</td><td>c8、c16、c32</td><td>分别用两个32位、64位或128位浮点数表示的复数</td></tr><tr><td>bool</td><td>?</td><td>存储True和False值的布尔类型</td></tr></tbody></table></li></ul><h3 id="数组的形状" tabindex="-1"><a class="header-anchor" href="#数组的形状" aria-hidden="true">#</a> 数组的形状</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 创建一个1行3列的数组（一维数组）</span>
t1<span class="token punctuation">.</span>shape  <span class="token comment"># 查看数组的形状 -&gt; (3,)</span>
t2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 创建一个2行3列的数组（二维数组）</span>
t2<span class="token punctuation">.</span>shape  <span class="token comment"># 查看数组的形状 -&gt; (2, 3)</span>
t3 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 创建一个三维数组</span>
t3<span class="token punctuation">.</span>shape  <span class="token comment"># 查看数组的形状 -&gt; (2, 2, 3)</span>

t3<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 修改数组的形状，将t3从三维数组变为二维数组，返回一个新数组，t3本身不变</span>
t3<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 将数组展开为一维数组，返回一个新数组，t3本身不变</span>
t4 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 创建一个一维数组</span>
t4<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 修改数组的形状，将t4从一维数组变为三维数组，返回一个新数组，t4本身不变</span>

t3<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 修改为一维数组</span>
t3<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 修改为二维数组</span>
t3<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 修改为二维数组，和上面结果不同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组的计算" tabindex="-1"><a class="header-anchor" href="#数组的计算" aria-hidden="true">#</a> 数组的计算</h3><ul><li><p><strong>数组和数的计算</strong></p><p>因为<code>numpy</code>的广播机制，在运算过程中，数组和数的计算会被广播到所有元素上面</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 创建一个二维(2, 3)数组</span>
t2 <span class="token operator">=</span> t1<span class="token operator">-</span><span class="token number">2</span>  <span class="token comment"># 计算后会返回一个新的数组，原数组不变 -&gt; [[-1  0  1] [ 2  3  4]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：数组和数的计算中，<code>0</code>可以当做除数，<code>0/0=nan</code>，<code>正数/0=inf</code>，<code>负数/0=-inf</code>，其中<code>nan</code>意为<code>not a number</code>(不是一个数字)，<code>inf</code>意为<code>infinite</code>(无穷的)</p></li><li><p><strong>数组和数组的计算</strong></p><ul><li><p><em><strong>当数组的形状相同时</strong></em>，对应位置的数进行计算</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
t2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t1<span class="token operator">+</span>t2<span class="token punctuation">)</span>  <span class="token comment"># [[101 202 303] [404 505 606]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><em><strong>当数组的形状不同时</strong></em>，如果有一个维度是相同的，那么就以此维度为基准进行计算；如果没有相同的维度，那么就会报错</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
t3 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t1<span class="token operator">+</span>t3<span class="token punctuation">)</span>  <span class="token comment"># [[11 22 33] [14 25 36]]</span>

t4 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t1<span class="token operator">+</span>t4<span class="token punctuation">)</span>  <span class="token comment"># [[101 102 103] [204 205 206]]</span>

t5 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># t1+t5  # ValueError: operands could not be broadcast together with shapes (2,3) (6,)</span>

t6 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># t1+t6  # ValueError: operands could not be broadcast together with shapes (2,3) (3,3)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><em><strong>广播原则</strong></em>：如果两个数组的后缘维度（即从末尾开始算起的维度）的轴长度相符或其中一方的长度为1，则认为它们是广播兼容的。广播会在缺失和（或）长度为1的维度上进行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(2,3,5,3,6,2)  (4,6,2)   不可以计算
(2,3,5,3,6,2)  (3,6,2)   可以计算
(2,3,5,3,6,2)  (3,6,2,1) 不可以计算
(2,3,5,3,6,2)  (1,3,6,2) 可以计算
(2,3,5,3,6,2)  (2,)      可以计算
(2,3,5,3,6,2)  (1,2)     可以计算
(2,3,5,3,6,2)  (2,1)     不可以计算
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="数组的拼接与分割" tabindex="-1"><a class="header-anchor" href="#数组的拼接与分割" aria-hidden="true">#</a> 数组的拼接与分割</h3><p><code>np.vstack((t1, t2))</code>：竖直拼接(vertically)，参数是需要拼接的数组组成的元组，返回拼接后的数组</p><p><code>np.hstack((t1, t2))</code>：水平拼接(horizontally)，参数是需要拼接的数组组成的元组，返回拼接后的数组</p><p><code>np.vsplit(t3, 2)</code>：竖直分割(vertically)，是竖直拼接的逆向操作，参数是需要分割的数组和分割的份数，默认均等分割，返回分割后的数组组成的列表</p><p><code>np.hsplit(t4, 4)</code>：水平分割(horizontally)，是水平拼接的逆向操作，参数和返回值同竖直分割相同</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
t2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;拼接&quot;&quot;&quot;</span>
t3 <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span><span class="token punctuation">)</span>
t4 <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;分割&quot;&quot;&quot;</span>
l1 <span class="token operator">=</span> np<span class="token punctuation">.</span>vsplit<span class="token punctuation">(</span>t3<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
l2 <span class="token operator">=</span> np<span class="token punctuation">.</span>hsplit<span class="token punctuation">(</span>t4<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;高级分割(没看懂什么意思？？？？)&quot;&quot;&quot;</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
lx1 <span class="token operator">=</span> np<span class="token punctuation">.</span>vsplit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组的行列交换" tabindex="-1"><a class="header-anchor" href="#数组的行列交换" aria-hidden="true">#</a> 数组的行列交换</h3><p>行列交换的意思是指将行与行或者列与列的位置进行互换</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

t <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

t<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment"># 行交换</span>
t<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 列交换</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="轴-axis" tabindex="-1"><a class="header-anchor" href="#轴-axis" aria-hidden="true">#</a> 轴(axis)</h2><p>轴的解释：在<code>numpy</code>中可以理解为方向，使用数字0,1,2...表示，对于一个一维数组，只有一个0轴，对于二维数组<code>(shape(2,2))</code>，有0轴和1轴，对于三维数组<code>(shape(2,2, 3))</code>，有0,1,2轴</p><p>如：<code>np.arange(0,10).reshape((2,5))</code>，<code>reshape</code>中2表示0轴长度(包含数据的条数)为2，1轴长度为5，2*5一共10个数据</p><h2 id="numpy读取数据和索引" tabindex="-1"><a class="header-anchor" href="#numpy读取数据和索引" aria-hidden="true">#</a> numpy读取数据和索引</h2><h3 id="读取本地数据" tabindex="-1"><a class="header-anchor" href="#读取本地数据" aria-hidden="true">#</a> 读取本地数据</h3><p>语法：<code>np.loadtxt(fname, dtype=np.float, delimiter=None, skiprows=0, usecols=None, unpack=False)</code></p><table><thead><tr><th><strong>参数</strong></th><th><strong>解释</strong></th></tr></thead><tbody><tr><td><code>frame</code></td><td>文件、字符串或产生器，可以是<code>.gz</code>或<code>bz2</code>的压缩文件</td></tr><tr><td><code>dtype</code></td><td>数据类型，可选，文件的内容以数据类型计入数组中，默认是<code>np.float</code></td></tr><tr><td><code>delimiter</code></td><td>分隔字符串，默认是任何空格</td></tr><tr><td><code>skiprows</code></td><td>跳过前<code>x</code>行，一般用于跳过第一行表头</td></tr><tr><td><code>usecols</code></td><td>读取指定的列，索引，元组类型</td></tr><tr><td><code>unpack</code></td><td>默认为<code>False</code>，表示读入数据只写入一个数组变量；为<code>True</code>，表示读入属性将分别写入不同数组变量（可以理解为行列转换，默认的行列和文件中的相同）</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
us_file_path <span class="token operator">=</span> <span class="token string">&#39;./youtube_video_data/US_video_data_numbers.csv&#39;</span>
t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>us_file_path<span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span> unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="numpy中的转置" tabindex="-1"><a class="header-anchor" href="#numpy中的转置" aria-hidden="true">#</a> numpy中的转置</h3><p>转置是一种变换，对于numpy中的数组来说，就是在对角线方向交换数据，目的也是为了更方便的去处理数据。在二维数组中转置的简单理解就是把行和列进行转换，行变为列，列变为行</p><p>转置的方法有三种：<code>t.transpose()</code>、<code>t.T</code>、<code>t.swapaxes(1,0)</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

t <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 以下三种方法转置的结果相同</span>
t<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span>
t<span class="token punctuation">.</span>T
t<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 交换轴</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="numpy的切片" tabindex="-1"><a class="header-anchor" href="#numpy的切片" aria-hidden="true">#</a> numpy的切片</h3><p>numpy的切片和Python中列表的切片类似，不同的是需要在多个维度上进行操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

us_file_path <span class="token operator">=</span> <span class="token string">&#39;./youtube_video_data/US_video_data_numbers.csv&#39;</span>
t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>us_file_path<span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;取行和列&quot;&quot;&quot;</span>
<span class="token comment"># 取第3行第4列的值</span>
a <span class="token operator">=</span> t1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># 170708，类型为&lt;class &#39;numpy.int32&#39;&gt;</span>
<span class="token comment"># 取第3行到第5行，第2列到第4列的值（取的是交叉点的数据）</span>
b <span class="token operator">=</span> t1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>  <span class="token comment"># 类型为&lt;class &#39;numpy.ndarray&#39;&gt;</span>
<span class="token comment"># 取多个不相邻的点</span>
<span class="token comment"># 取的结果是(0, 0), (2, 1), (2, 3)位置的值</span>
c <span class="token operator">=</span> t1<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># [4394029  576597  170708]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，在上面的代码中<code>[]</code>中的<code>,</code>前面表示行，<code>,</code>后面表示列</p><p>（以上代码只展示了同时取行和列的操作，单独取行或取列的操作请看详细代码文件）</p><h3 id="numpy中数值的修改" tabindex="-1"><a class="header-anchor" href="#numpy中数值的修改" aria-hidden="true">#</a> numpy中数值的修改</h3><p>数组中修改行列的值，只需要取到对应的行列然后赋予一个新的值即可</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
t <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
t<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment"># 取到对应的数值然后赋予一个新的值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="numpy中的布尔索引" tabindex="-1"><a class="header-anchor" href="#numpy中的布尔索引" aria-hidden="true">#</a> numpy中的布尔索引</h3><img src="`+p+'" alt="numpy中的布尔索引" style="zoom:60%;"><p>（详细演示内容见代码文件）</p><h3 id="numpy中的三元运算符" tabindex="-1"><a class="header-anchor" href="#numpy中的三元运算符" aria-hidden="true">#</a> numpy中的三元运算符</h3><figure><img src="'+e+'" alt="numpy中的三元运算符" tabindex="0" loading="lazy"><figcaption>numpy中的三元运算符</figcaption></figure><h3 id="numpy中的clip-裁剪" tabindex="-1"><a class="header-anchor" href="#numpy中的clip-裁剪" aria-hidden="true">#</a> numpy中的clip(裁剪)</h3><figure><img src="'+o+`" alt="numpy中的clip" tabindex="0" loading="lazy"><figcaption>numpy中的clip</figcaption></figure><h2 id="numpy中的nan和inf" tabindex="-1"><a class="header-anchor" href="#numpy中的nan和inf" aria-hidden="true">#</a> numpy中的nan和inf</h2><h3 id="nan" tabindex="-1"><a class="header-anchor" href="#nan" aria-hidden="true">#</a> nan</h3><p><code>nan(NAN,Nan)</code>：not a number，表示不是一个数字，数据类型为<code>float</code></p><ul><li><p><strong>什么时候会出现nan</strong></p><p><em><strong>1&gt;</strong></em> 读取本地的文件为<code>float</code>的时候，如果有缺失，就会出现<code>nan</code></p><p><em><strong>2&gt;</strong></em> 做不合适计算的时候(比如无穷大减去无穷大)</p><p><em><strong>3&gt;</strong></em> <code>0/0</code>的结果为<code>nan</code></p></li><li><p><strong>nan的性质</strong></p><p><em><strong>1&gt;</strong></em> 两个<code>nan</code>是不相等的</p><p><em><strong>2&gt;</strong></em> 利用上述特性判断数组中<code>nan</code>的数量</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
t <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
a <span class="token operator">=</span> np<span class="token punctuation">.</span>count_nonzero<span class="token punctuation">(</span>t <span class="token operator">!=</span> t<span class="token punctuation">)</span>  <span class="token comment"># 得到nan的数量 -&gt; 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>3&gt;</strong></em> 判断一个数字是否是<code>nan</code>，使用<code>np.isnan()</code>方法，是<code>nan</code>则返回<code>True</code>，否则返回<code>False</code>，同样也可以用来判断<code>nan</code>的数量</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
t <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>count_nonzero<span class="token punctuation">(</span>np<span class="token punctuation">.</span>isnan<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 得到nan的数量 -&gt; 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>4&gt;</strong></em> <code>nan</code>和任何值的计算结果都为<code>nan</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
t <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>  <span class="token comment"># 计算数组t的和 -&gt; nan</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>实际问题中nan的处理方式</strong></p><p>因为<code>nan</code>和任何值的计算结果都为<code>nan</code>，所以实际问题中遇到<code>nan</code>会影响数据的处理，而如果单纯地把<code>nan</code>替换为<code>0</code>又会影响均值等数据的准确性，所以更好的方法是将<code>nan</code>(缺失的值)替换为均值(中值)或者直接删除有<code>nan</code>(有缺失值)的一行或一列</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">fill_ndarray</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;给定一个数组，通过遍历数组中的每一列，将列中为nan的位置替换为当前列中不为nan的均值，
    返回替换后的数组，return t&quot;&quot;&quot;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 遍历每一列</span>
        temp_col <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span>  <span class="token comment"># 当前的一列</span>
        nan_num <span class="token operator">=</span> np<span class="token punctuation">.</span>count_nonzero<span class="token punctuation">(</span>temp_col <span class="token operator">!=</span> temp_col<span class="token punctuation">)</span>  <span class="token comment"># 统计当前列中nan的数量</span>
        <span class="token keyword">if</span> nan_num<span class="token punctuation">:</span>  <span class="token comment"># 为True说明当前列中有nan</span>
            <span class="token comment"># 取出当前列中不为nan的值</span>
            temp_no_nan_col <span class="token operator">=</span> temp_col<span class="token punctuation">[</span>temp_col <span class="token operator">==</span> temp_col<span class="token punctuation">]</span>
            <span class="token comment"># 选中当前列中为nan的位置，把值赋值为不为nan的均值</span>
            temp_col<span class="token punctuation">[</span>np<span class="token punctuation">.</span>isnan<span class="token punctuation">(</span>temp_col<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp_no_nan_col<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> t
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="inf" tabindex="-1"><a class="header-anchor" href="#inf" aria-hidden="true">#</a> inf</h3><p><code>inf(-inf,inf)</code>：<code>infinity</code>，无穷的。<code>inf</code>表示正无穷，<code>-inf</code>表示负无穷，数据类型为<code>float</code></p><p>一个数字除以<code>0</code>的结果为<code>inf</code>，<code>正数/0=inf</code>，<code>负数/0=-inf</code></p><h2 id="numpy中常用的统计函数" tabindex="-1"><a class="header-anchor" href="#numpy中常用的统计函数" aria-hidden="true">#</a> numpy中常用的统计函数</h2><p>求和：<code>t.sum(axis=None)</code></p><p>均值：<code>t.mean(axis=None)</code>，受离群点的影响较大</p><p>中值：<code>np.median(t,axis=None)</code></p><p>最大值：<code>t.max(axis=None)</code></p><p>最小值：<code>t.min(axis=None)</code></p><p>极差：<code>np.ptp(t,axis=None)</code>，即最大值和最小值之差</p><p>标准差：<code>t.std(axis=None)</code></p><p>以上函数默认返回多维数组全部数值的统计结果，如果指定axis则返回当前轴上的结果</p><h2 id="numpy中的其他方法" tabindex="-1"><a class="header-anchor" href="#numpy中的其他方法" aria-hidden="true">#</a> numpy中的其他方法</h2><h3 id="创建特殊数组" tabindex="-1"><a class="header-anchor" href="#创建特殊数组" aria-hidden="true">#</a> 创建特殊数组</h3><p>创建一个全为0的数组：<code>np.zeros((3,4))</code></p><p>创建一个全为1的数组：<code>np.ones((3,4))</code></p><p>创建一个对角线全为1的正方形数组(方阵)：<code>np.eye(3)</code></p><p>获取最大值、最小值的位置：<code>np.argmax(t,axis=0)</code>、<code>np.argmin(t,axis=1)</code></p><h3 id="numpy生成随机数" tabindex="-1"><a class="header-anchor" href="#numpy生成随机数" aria-hidden="true">#</a> numpy生成随机数</h3><table><thead><tr><th><strong>语法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>np.random.rand(d0,d1,d2,...,dn)</code></td><td>创建<code>d0</code>到<code>dn</code>维度的均匀分布的随机数数组，浮点数，范围为<code>0-1</code></td></tr><tr><td><code>np.random.randn(d0,d1,d2,...,dn)</code></td><td>创建<code>d0</code>到<code>dn</code>维度的标准正态分布的随机数，浮点数，平均数为<code>0</code>，标准差为<code>1</code></td></tr><tr><td><code>np.random.randint(min,max,(shape))</code></td><td>随机生成<code>[min,max)</code>之间的整数组成数组，形状是<code>shape</code></td></tr><tr><td><code>np.random.uniform(min,max,(shape))</code></td><td>随机生成<code>[min,max)</code>之间的浮点数组成数组，形状是<code>shape</code></td></tr><tr><td><code>np.random.normal(loc,scale,(shape))</code></td><td>从指定正态分布中随机生成浮点数，分布中心为<code>loc</code>，标准差为<code>scale</code>，形状为<code>shape</code></td></tr><tr><td><code>np.random.seed(s)</code></td><td>随机数种子，<code>s</code>是给定的种子值。设定相同的种子值之后，后续每次生成的随机数都和第一次生成的相同</td></tr></tbody></table><h3 id="numpy中的copy和view" tabindex="-1"><a class="header-anchor" href="#numpy中的copy和view" aria-hidden="true">#</a> numpy中的copy和view</h3><ul><li><p><code>a = b</code>：完全不复制，<code>a</code>和<code>b</code>相互影响</p></li><li><p><code>a = b[:]</code>：视图的操作，一种切片，会创建新的对象<code>a</code>，但是<code>a</code>的数据完全由<code>b</code>保管，他们两个的数据变化是一致的</p></li><li><p><code>a = b.copy()</code>：复制，<code>a</code>和<code>b</code>互不影响</p></li></ul>`,74),l=[u];function i(d,r){return s(),a("div",null,l)}const b=n(c,[["render",i],["__file","02_numpy模块.html.vue"]]);export{b as default};
