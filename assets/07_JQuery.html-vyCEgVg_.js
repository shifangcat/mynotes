import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-VKLC1A-x.js";const p={},e=t(`<h1 id="jquery" tabindex="-1"><a class="header-anchor" href="#jquery" aria-hidden="true">#</a> JQuery</h1><h2 id="jquery介绍" tabindex="-1"><a class="header-anchor" href="#jquery介绍" aria-hidden="true">#</a> jQuery介绍</h2><p>jQuery是目前使用最广泛的JavaScript函数库，目前有1.x系列、2.x和3.x系列的版本，1.x系列兼容低版本的浏览器，2.x、3.x系列放弃支持低版本浏览器，目前使用最多的是1.x系列的版本</p><p>jQuery也是一个js文件，嵌入页面的方式和其他js文件相同：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/jquery-1.12.4.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>官方网站：http://jquery.com/</p><p>版本下载：https://code.jquery.com/</p><ul><li><p><strong>ready方法</strong></p><p>将获取元素的语句写到页面头部，会因为元素还没有加载而出错，jQuery提供了ready方法解决这个问题：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ready的简写方式为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：ready比window.onload要快，原因是：window.onload是在标签加载并渲染完之后才运行，而ready在标签加载完之后就会运行了</p><p><em><strong>注</strong></em>：不能直接在jQuery的引入标签中写js代码，需要另外增加一个script标签，在其内部写js代码</p></li></ul><h2 id="jquery选择器" tabindex="-1"><a class="header-anchor" href="#jquery选择器" aria-hidden="true">#</a> jQuery选择器</h2><p>jQuery用法思想一：选择某个网页元素，然后对它进行某种操作</p><ul><li><p><strong>jQuery选择器</strong></p><p>jQuery选择器可以快速地选择元素，选择规则和css样式相同，使用length属性判断是否选择成功</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myId&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 选择id为myId的网页元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.myClass&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 选择class属性为myClass的元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 选择所有的li元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#ul1 li span&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 选择id为ul1元素下的所有li下的span元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;input[name=first]&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 选择name属性等于first的input元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：在jQuery中带“-”的样式属性，可以写成小驼峰式，也可以写成原始带“-”的样式</p></li><li><p><strong>选择集过滤</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择包含p标签的div元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&#39;.myClass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择class属性不是myClass的div元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&#39;.myClass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择class属性是myClass的div元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择第6个div元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>选择集转移</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择div元素前面紧挨的同辈元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prevAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择div元素之前所有的同辈元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择div元素后面紧挨的同辈元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择div元素后面所有的同辈元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择div的父元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择div的所有子元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择除了div之外的所有同级元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.myClass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 选择div内class属性是myClass的子元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>length属性</strong></p><p>jQuery有容错机制，即使没有找到元素，也不会报错，可以使用length属性来判断是否找到了元素：length等于0，表示没选择到元素，length大于0，表示选择到了元素</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span>$div01<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="jquery样式操作" tabindex="-1"><a class="header-anchor" href="#jquery样式操作" aria-hidden="true">#</a> jQuery样式操作</h2><p>jQuery用法思想二：使用同一个函数完成取值和赋值</p><ul><li><p><strong>操作行间样式</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取div的样式，即便没有明确写出来的样式属性值也可以获取其默认值，原生js则无法获取</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置div的样式</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;30px&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">fontSize</span><span class="token operator">:</span><span class="token string">&quot;30px&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：选择器获取多个元素时，获取到的只是第一个元素的属性值，比如：<code>$(&quot;div&quot;).css(&quot;width&quot;)</code>，获取到的是第一个div的width</p></li><li><p><strong>操作样式类名</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;divClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 为id为div1的对象追加divClass样式</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;divClass divClass2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 追加多个样式</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&quot;divClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 移除id为div1的对象的class属性为divClass的样式</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&quot;divClass divClass2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 移除多个样式</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&quot;anotherClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 反复切换追加或移除anotherClass样式，会自动判断有无</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&quot;divClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 判断id为div1的元素是否有class属性为divClass的样式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>绑定click事件</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>获取元素的索引值</strong></p><p>可以使用index()方法获取匹配元素相对于其同胞元素的索引值，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.list li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&#39;.myli&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="jquery特殊效果" tabindex="-1"><a class="header-anchor" href="#jquery特殊效果" aria-hidden="true">#</a> jQuery特殊效果</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 淡入</span>
<span class="token comment">// 设置动画时间、方式以及动画结束之后执行的函数回调</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">&#39;swing&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;动画结束了&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 淡出</span>
<span class="token punctuation">.</span><span class="token function">fadeToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 反复切换淡入淡出</span>
<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 隐藏元素</span>
<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 显示元素</span>
<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 反复切换元素的显示和隐藏</span>
<span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 向下展开</span>
<span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 向上卷起</span>
<span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 反复切换元素的展开和卷起</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="链式调用" tabindex="-1"><a class="header-anchor" href="#链式调用" aria-hidden="true">#</a> 链式调用</h2><p>jQuery对象的方法在执行完后会返回这个jQuery对象，所有jQuery对象的方法可以连起来写成链式调用，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="jquery动画" tabindex="-1"><a class="header-anchor" href="#jquery动画" aria-hidden="true">#</a> jQuery动画</h2><p>通过animate()方法可以设置元素某属性值上的动画，可以设置一个或多个属性值，动画执行完成后也可以执行一个回调函数，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;width&#39;</span><span class="token operator">:</span> <span class="token string">&#39;500px&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;swing&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;height&#39;</span><span class="token operator">:</span> <span class="token string">&#39;400px&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数也可以写成数字表达式的形式，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;width&#39;</span><span class="token operator">:</span><span class="token string">&#39;+=100&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="尺寸相关、滚动事件" tabindex="-1"><a class="header-anchor" href="#尺寸相关、滚动事件" aria-hidden="true">#</a> 尺寸相关、滚动事件</h2><ul><li><p><strong>获取元素尺寸</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 盒子内容的尺寸</span>
<span class="token punctuation">.</span><span class="token function">innerWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token function">innerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 盒子内容 + padding的尺寸</span>
<span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 盒子的真实尺寸：内容尺寸 + padding + border</span>
<span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 盒子的真实尺寸 + margin</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>获取元素的绝对位置</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>获取浏览器可视区的尺寸</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>获取页面文档的尺寸</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>获取页面的滚动距离</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>页面滚动事件</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
    <span class="token operator">...</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="jquery属性操作" tabindex="-1"><a class="header-anchor" href="#jquery属性操作" aria-hidden="true">#</a> jQuery属性操作</h2><ul><li><p><strong>.prop()读取或设置属性值</strong></p><p>读取属性时没有明确写出的属性读取为空，对于图片会读取绝对地址</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$a<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 读取 href 属性</span>
$a<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;href&#39;</span><span class="token operator">:</span> <span class="token string">&#39;https://www.sogou.com&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;title&#39;</span><span class="token operator">:</span> <span class="token string">&#39;搜狗&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置属性</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>.html()读取或设置标签内包裹的内容</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$a<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 读取标签内包裹的内容</span>
$a<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&#39;新的链接包裹内容&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置标签内包裹的内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="jquery循环" tabindex="-1"><a class="header-anchor" href="#jquery循环" aria-hidden="true">#</a> jQuery循环</h2><p>jQuery可以对选择集进行整体操作，想要分别操作需要使用each()方法实现jQuery循环</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// each循环：res是要遍历的对象，function是遍历的回调函数</span>
<span class="token comment">// index是每次遍历到的对象的索引，item是每次遍历到的对象</span>
$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理操作...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jquery事件" tabindex="-1"><a class="header-anchor" href="#jquery事件" aria-hidden="true">#</a> jQuery事件</h2><ul><li><p><strong>事件类型</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 获得焦点，一般用来让input元素在程序刚开始运行时就自动获得焦点；同一时间只能有一个元素获得焦点</span>
<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 失去焦点，一般用于失去焦点时判断输入内容是否合法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">mouseover</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 鼠标移入，移入子元素时也会触发</span>
<span class="token punctuation">.</span><span class="token function">mouseout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 鼠标移出，移出子元素时也会触发</span>
<span class="token punctuation">.</span><span class="token function">mouseenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 鼠标移入，移入子元素时不会触发</span>
<span class="token punctuation">.</span><span class="token function">mouseleave</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 鼠标移出，移出子元素时不会触发</span>
<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 可以合并处理mouseenter和mouseleave事件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 鼠标单击</span>
<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// DOM加载完成</span>
<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 浏览器窗口大小发生改变，一般用于window对象</span>
<span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 滚动条的位置发生变化</span>
<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 提交表单</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>绑定事件和解绑</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">&#39;mouseover click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// 点击或者鼠标移入的时候都可以执行绑定的函数</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;触发事件&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token string">&#39;mouseover&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 解绑事件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="事件冒泡" tabindex="-1"><a class="header-anchor" href="#事件冒泡" aria-hidden="true">#</a> 事件冒泡</h2><ul><li><p><strong>定义</strong></p><p>在一个对象上触发某类事件时，该事件会向此对象的父级传播，从里到外，直到到达了对象层次的最顶层，即document对象（有些浏览器是window）。并且在传播过程中遇到处理此事件的程序时，会自动触发执行，父级对象中所有同类事件的处理程序也会被激活</p></li><li><p><strong>作用</strong></p><p>事件冒泡允许多个操作被集中处理（把事件处理器添加到一个父级元素上，避免把事件处理器添加到多个子级元素上）；事件冒泡还可以在对象层的不同级别捕获事件</p></li><li><p><strong>阻止事件冒泡和默认行为</strong></p><ul><li><p><em><strong>阻止事件冒泡</strong></em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.son&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;son&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 阻止事件冒泡</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><em><strong>阻止默认行为</strong></em>，如：阻止表单的提交</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//  </span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><em><strong>合并阻止操作</strong></em></p><p>通过<code>return false;</code>同时阻止事件冒泡和默认行为，并且不需要event参数</p></li></ul></li></ul><h2 id="事件委托" tabindex="-1"><a class="header-anchor" href="#事件委托" aria-hidden="true">#</a> 事件委托</h2><ul><li><p><strong>定义</strong></p><p>事件委托，也叫事件代理，就是利用事件冒泡的原理，把事件加到父级上，通过判断事件来源的子集，执行相应的操作。事件委托首先可以极大减少事件绑定的次数，提高性能；其次可以让新加入的子元素也拥有相同的操作</p></li><li><p><strong>事件委托的写法</strong></p><p>实现事件委托需要使用delegate()方法</p><p>delegate()方法需要三个参数：第一个参数是被委托的后辈元素对象；第二个参数是被委托的事件（可以绑定多个事件）；第三个参数是处理事件的程序，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;backgroundColor&#39;</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// $(this)指的是被委托的触发事件的子元素</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="节点操作" tabindex="-1"><a class="header-anchor" href="#节点操作" aria-hidden="true">#</a> 节点操作</h2><ul><li><p><strong>创建节点</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> $a <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;a href=&quot;#&quot;&gt;链接&lt;/a&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 创建一个带有属性和内容的a元素，把它赋值给$a</span>
<span class="token keyword">var</span> $a2 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;a&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 创建一个空的a元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>插入节点</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 在父元素内部的最后面添加子元素</span>
$a<span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 把子元素添加到父元素内部的最后面，和上面的效果相同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>$p<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 在父元素内部的最前面添加子元素</span>
$p<span class="token punctuation">.</span><span class="token function">prependTo</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 把子元素添加到父元素内部的最前面，和上面的效果相同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>$h2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 在元素外部的后面添加同级元素</span>
$h2<span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 把元素添加到同级元素外部的后面，和上面的效果相同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>$h3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 在元素外部的前面添加同级元素</span>
$h3<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 把元素添加到同级元素外部的前面，和上面的效果相同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>操作已有节点</strong></p><p>操作已有节点的方法和插入节点的方法相同，原理类似于“剪切+粘贴”</p></li><li><p><strong>删除节点</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#h3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 删除 h3节点</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="滚轮事件与函数节流" tabindex="-1"><a class="header-anchor" href="#滚轮事件与函数节流" aria-hidden="true">#</a> 滚轮事件与函数节流</h2><ul><li><p><strong>鼠标滚轮事件</strong></p><p>jQuery中没有鼠标滚轮事件，原生js中的鼠标滚轮事件不兼容，所以为了实现鼠标滚轮事件需要为页面引入jquery.mousewheel.js插件。鼠标滚轮事件的<em><strong>绑定</strong></em>如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mousewheel</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> dat</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dat<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// dat是由鼠标滚动自动产生的数据，向下滚动为-1，向上滚动为1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>函数节流</strong></p><p>JavaScript中有些事件的触发频率非常高，比如onresize事件（jq中是resize）、onmousemove事件（jq中是mousemove）以及鼠标滚轮事件等，在短时间内多处触发执行绑定的函数，可以巧妙地使用定时器来减少触发的次数，实现函数节流</p></li></ul><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h2><p>json是JavaScript Object Notation的首字母缩写，意思是JavaScript对象表示法，这里说的json指的是类似于JavaScript对象的一种数据格式。表示方式如：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：json数据格式的属性名称和字符串值需要用双引号引起来，用单引号或者不用引号会导致读取数据错误</p><p>json的另外一个数据格式是数组，和JavaScript中的数组字面量相同。格式如：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;programmer&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ajax与jsonp" tabindex="-1"><a class="header-anchor" href="#ajax与jsonp" aria-hidden="true">#</a> ajax与jsonp</h2><p>ajax技术的目的是让JavaScript发送http请求，与后台通信，获取数据和信息。ajax技术的原理是实例化xmlhttp对象，使用此对象与后台通信。ajax通信的过程不会影响后续JavaScript的执行，从而实现异步</p><ul><li><p><strong>同步和异步</strong></p><p>程序中的<em><strong>同步</strong></em>指的是程序在同一时间只做一件事，完成之后再做另一件事；</p><p><em><strong>异步</strong></em>指的是程序可以在同一时间做几件事</p></li><li><p><strong>局部刷新和无刷新</strong></p><p>ajax可以实现局部刷新，也叫做无刷新，指的是整个页面不刷新，只有页面的一部分刷新。</p><p>ajax可以自己发送http请求，不用通过浏览器的地址栏，所以页面整体不会刷新，ajax获取到后台数据，只刷新页面中显示数据的部分，就做到了页面的局部刷新</p></li><li><p><strong>同源策略</strong></p><p>ajax请求的页面或资源只能是同一个域下面的资源，不能是其他域的资源，这是在设计ajax时基于安全的考虑。特征报错提示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>XMLHttpRequest cannot load https://www.baidu.com/. No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.Origin &#39;null&#39; is therefore not allowed access.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>$.ajax使用方法</strong></p><ul><li><p><em><strong>常用参数</strong></em></p><ul><li><code>url</code>请求的地址</li><li><code>type</code>请求方式，默认是<code>&#39;GET&#39;</code>，常用的还有<code>&#39;POST&#39;</code></li><li><code>dataType</code>设置返回的数据格式，常用的是<code>&#39;json&#39;</code>格式，也可以设置为<code>&#39;html&#39;</code></li><li><code>data</code>设置发送给服务器的数据</li><li><code>success</code>设置请求成功后的回调函数</li><li><code>error</code>设置请求失败后的回调函数</li><li><code>async</code>设置是否异步，默认值是<code>&#39;true&#39;</code>，表示异步</li></ul></li><li><p><em><strong>$.ajax语句写法</strong></em></p><ul><li><p>推荐的新写法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// $.ajax({...}).done(...).fail(...);</span>
$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;date.json&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dat</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// 设置请求成功后的回调函数</span>
	<span class="token function">alert</span><span class="token punctuation">(</span>dat<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// dat是从url地址中获取到的数据</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// 设置请求失败后的回调函数</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;服务器超时！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>以前的写法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;date.json&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dat</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dat<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;服务器超时！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li><li><p><strong>jsonp</strong></p><p>ajax只能请求同一个域下的数据或资源，有时候需要跨域请求数据，就需要用到jsonp技术。jsonp可以跨域请求数据，它的原理主要是利用了script标签可以跨域链接资源的特性。jsonp和ajax原理完全不一样，不过jQuery将它们封装进了同一个函数里。jsonp的语法格式如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;js/data.js&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// data.js里面的数据格式：fnBack({&quot;name&quot;: &quot;Jack&quot;, &quot;age&quot;: 23});</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;jsonp&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">jsonpCallback</span><span class="token operator">:</span> <span class="token string">&#39;fnBack&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dat</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span>dat<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;服务器超时！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="jquery-ui" tabindex="-1"><a class="header-anchor" href="#jquery-ui" aria-hidden="true">#</a> jQuery UI</h2><p>jQuery UI是以jQuery为基础的代码库，包含底层用户交互、动画、特效和可更换主题的可视控件。网址：http://jqueryui.com/</p><ul><li><p><strong>拖拽</strong></p><p>实现拖拽的方法：<code>draggable()</code>，其中可以设置的参数有：</p><p><code>axis</code>设置拖拽的方向，x或y</p><p><code>containment</code>设置拖拽的范围，可以是父元素（parent），或者具体数值[x最小,y最小,x最大,y最大]</p><p><code>drag</code>设置拖拽时触发的函数，<code>function(ev,ui){}</code>ev表示拖拽事件，ui表示拖拽产生的数据</p></li></ul><h2 id="本地存储" tabindex="-1"><a class="header-anchor" href="#本地存储" aria-hidden="true">#</a> 本地存储</h2><p>本地存储分为cookie、localStorage以及sessionStorage</p><ul><li><p><strong>cookie</strong></p><p>cookie存储在本地，容量最大为4k，在同源的http请求时携带传递，损耗带宽，可设置访问路径，只有此路径及此路径的子路径才能访问此cookie，在设置的过期时间之前有效，使用需要引入jquery.cookie.js插件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 存储cookie，过期时间为7天，存储在网站根目录下</span>
$<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">&#39;cookiename&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cookievalue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">expires</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 读取cookie</span>
<span class="token keyword">var</span> $val <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">&#39;cookiename&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>localStorage和sessionStorage</strong></p><ul><li><p>localStorage存储在本地，容量为5M或者更大，不会在请求时携带传递，在所有同源窗口中共享，数据一直有效，除非人为删除，可作为长期数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 设置</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;local_name01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;local_value01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
localStorage<span class="token punctuation">.</span>local_name02 <span class="token operator">=</span> <span class="token string">&#39;local_value02&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 读取</span>
<span class="token keyword">var</span> sVal01 <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;local_name01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> sVal02 <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>local_name02<span class="token punctuation">;</span>
<span class="token comment">// 删除</span>
localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;local_name01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>sessionStorage存储在本地，容量为5M或者更大，不会在请求时携带传递，在同源的当前窗口关闭前有效，设置和读取方法和localStorage相同，窗口关闭时自动删除</p></li></ul><p>localStorage和sessionStorage是HTML 5新增的本地存储方式，两者合称为Web Storage。Web Storage支持事件通知机制，可以将数据更新通知监听者，Web Storage的api接口使用更方便</p></li></ul><p><em><strong>注</strong></em>：iPhone的无痕浏览不支持Web Storage，只能用cookie</p>`,57),o=[e];function c(i,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","07_JQuery.html.vue"]]);export{k as default};
