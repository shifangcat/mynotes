import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as e}from"./app-VKLC1A-x.js";const t={},p=e(`<h1 id="字典" tabindex="-1"><a class="header-anchor" href="#字典" aria-hidden="true">#</a> 字典</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>字典是 Python 内置的数据结构之一，与列表一样是一个可变序列</p><p>字典通过<em><strong>键值对</strong></em>的方式存储数据</p><p>字典是一个<em><strong>无序</strong></em>的序列</p><p><strong>字典的实现原理</strong>：字典的实现原理和查字典类似，查字典是先根据部首或拼音查找汉字对应的页码，Python 中的字典是根据 <code>key</code> 查找 <code>value</code> 所在的位置</p><p><strong>字典的特点</strong>：</p><p><em><strong>1&gt;</strong></em> 字典中的所有元素都是一个 <code>key-value</code> 对，<code>key</code> 不允许重复，<code>value</code> 可以重复</p><p><em><strong>2&gt;</strong></em> 字典中的元素是<em><strong>无序</strong></em>的</p><p><em><strong>3&gt;</strong></em> 字典中的 <code>key</code> 必须是不可变对象</p><p><em><strong>4&gt;</strong></em> 字典也可以根据需要动态的伸缩</p><p><em><strong>5&gt;</strong></em> 字典会浪费较大的内存，是一种使用空间换时间的数据结构</p><p><em><strong>6&gt;</strong></em> 字典中的值可以是任何数据类型，但是键只能使用字符串、数字或元组</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">:</span> <span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">&#39;xiaoming&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span>
d2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;lisi&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span>  <span class="token comment"># TypeError: unhashable type: &#39;list&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字典的创建" tabindex="-1"><a class="header-anchor" href="#字典的创建" aria-hidden="true">#</a> 字典的创建</h2><h3 id="普通创建" tabindex="-1"><a class="header-anchor" href="#普通创建" aria-hidden="true">#</a> 普通创建</h3><p>使用花括号 <code>{}</code> 或者 <code>dict()</code> 函数创建</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
d2 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字典生成式" tabindex="-1"><a class="header-anchor" href="#字典生成式" aria-hidden="true">#</a> 字典生成式</h3><p>内置函数 <code>zip()</code>：用于将可迭代的对象作为参数，将对象中对应的元素打包成一个元组，然后返回由这些元组组成的列表</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;fruits&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;books&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;other&#39;</span><span class="token punctuation">]</span>
prices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">]</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span>item<span class="token punctuation">:</span> price <span class="token keyword">for</span> item<span class="token punctuation">,</span> price <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> prices<span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字典的查询" tabindex="-1"><a class="header-anchor" href="#字典的查询" aria-hidden="true">#</a> 字典的查询</h2><h3 id="获取字典中的元素" tabindex="-1"><a class="header-anchor" href="#获取字典中的元素" aria-hidden="true">#</a> 获取字典中的元素</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
info<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span>      <span class="token comment"># 使用 [] 获取</span>
info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 使用 get() 方法获取</span>
info<span class="token punctuation">[</span><span class="token string">&#39;addr&#39;</span><span class="token punctuation">]</span>      <span class="token comment"># KeyError: &#39;addr&#39;</span>
info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;addr&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 返回 None</span>
info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;addr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;no addr&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 返回&#39;no addr&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>[]</code> 取值和 <code>get()</code> 取值的区别</strong>：</p><p><em><strong>1&gt;</strong></em> <code>[]</code> 取值：如果字典中不存在指定的 <code>key</code>，抛出 <code>KeyError</code></p><p><em><strong>2&gt;</strong></em> <code>get()</code> 取值：如果字典中不存在指定的 <code>key</code>，并不会抛出 <code>KeyError</code>，而是返回 <code>None</code>，可以通过参数设置默认的 <code>value</code>，以便指定的 <code>key</code> 不存在时返回</p><h3 id="字典元素的判断" tabindex="-1"><a class="header-anchor" href="#字典元素的判断" aria-hidden="true">#</a> 字典元素的判断</h3><p>使用 <code>in</code> 和 <code>not in</code> 可以判断字典中是否存在指定的 <code>key</code> 值</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
<span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> info  <span class="token comment"># True</span>
<span class="token string">&#39;addr&#39;</span> <span class="token keyword">in</span> info  <span class="token comment"># False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字典的常用操作" tabindex="-1"><a class="header-anchor" href="#字典的常用操作" aria-hidden="true">#</a> 字典的常用操作</h2><h3 id="增加字典元素" tabindex="-1"><a class="header-anchor" href="#增加字典元素" aria-hidden="true">#</a> 增加字典元素</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
info<span class="token punctuation">[</span><span class="token string">&#39;addr&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;beijing&#39;</span>  <span class="token comment"># 向字典中增加元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除字典元素" tabindex="-1"><a class="header-anchor" href="#删除字典元素" aria-hidden="true">#</a> 删除字典元素</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> info<span class="token punctuation">[</span><span class="token string">&#39;addr&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 删除字典中的元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取字典视图" tabindex="-1"><a class="header-anchor" href="#获取字典视图" aria-hidden="true">#</a> 获取字典视图</h3><table><thead><tr><th style="text-align:left;"><strong>方法</strong></th><th style="text-align:left;"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><code>keys()</code></td><td style="text-align:left;">获取字典中所有 <code>key</code></td></tr><tr><td style="text-align:left;"><code>values()</code></td><td style="text-align:left;">获取字典中所有 <code>value</code></td></tr><tr><td style="text-align:left;"><code>items()</code></td><td style="text-align:left;">获取字典中所有的 <code>key-value</code> 对</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
info<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>
info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字典元素的遍历" tabindex="-1"><a class="header-anchor" href="#字典元素的遍历" aria-hidden="true">#</a> 字典元素的遍历</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
<span class="token comment"># 遍历字典的 key</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> info<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>

<span class="token comment"># 遍历字典的 value</span>
<span class="token keyword">for</span> v <span class="token keyword">in</span> info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>

<span class="token comment"># 遍历字典的 key 和 value</span>
<span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字典的合并" tabindex="-1"><a class="header-anchor" href="#字典的合并" aria-hidden="true">#</a> 字典的合并</h3><p>可以使用 <code>d1.update(d2)</code> 的方法合并字典，如果被合并的字典中包含已经存在的键值对，则会<em><strong>更新</strong></em>原有的键值对</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span>
d2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
d1<span class="token punctuation">.</span>update<span class="token punctuation">(</span>d2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span>  <span class="token comment"># {&#39;name&#39;: &#39;zhangsan&#39;, &#39;age&#39;: 18, &#39;gender&#39;: True}</span>

dd1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span>
dd2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span>
dd1<span class="token punctuation">.</span>update<span class="token punctuation">(</span>dd2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dd1<span class="token punctuation">)</span>  <span class="token comment"># {&#39;name&#39;: &#39;zhangsan&#39;, &#39;age&#39;: 20, &#39;gender&#39;: True}，更新原有的键值对</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="哈希-hash" tabindex="-1"><a class="header-anchor" href="#哈希-hash" aria-hidden="true">#</a> 哈希（hash）</h2><p>Python 的内置函数 <code>hash()</code>，只能接收一个不可变类型的数据作为参数</p><p>在 Python 中，设置字典的键值对时，会首先对 key 进行 hash，已经决定了如何在内存中保存字典的数据，方便对字典进行增删改查，同时也决定了不能使用可变参数作为字典中的 key</p>`,46),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","07_字典.html.vue"]]);export{d as default};
