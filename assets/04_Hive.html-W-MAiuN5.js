import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as p,c as o,b as n,d as s,e as c,f as l}from"./app-VKLC1A-x.js";const i={},d=n("h1",{id:"hive",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hive","aria-hidden":"true"},"#"),s(" Hive")],-1),r={href:"https://www.lanqiao.cn/courses/3402/learning/?id=126508",target:"_blank",rel:"noopener noreferrer"},k=l(`<h2 id="hive-介绍" tabindex="-1"><a class="header-anchor" href="#hive-介绍" aria-hidden="true">#</a> Hive 介绍</h2><p>Hive 是基于 Hadoop 构建的一套开源的数据仓库分析系统，用来进行数据提取、转化、加载，这是一种可以存储、查询和分析存储在 Hadoop 中的大规模数据的机制。Hive 可以将结构化的数据文件映射为一张表，并提供了类 SQL 查询语言 HiveQL（Hive Query Language）</p><p>Hive 处理的数据存储在 HDFS 上，Hive 分析数据底层的实现是 MapReduce，执行程序运行在 YARN 上</p><p>Hive 的本质是将 HiveQL 语句转化成 MapReduce 程序，并提交到 Hadoop 集群上运行</p><ul><li><p><strong>Hive 具有如下特点</strong>：</p><p><em><strong>1&gt;</strong></em> 查询语言与 SQL 接近</p><p><em><strong>2&gt;</strong></em> 并行执行</p><p><em><strong>3&gt;</strong></em> 使用 HDFS 存储</p><p><em><strong>4&gt;</strong></em> 支持自定义数据格式</p><p><em><strong>5&gt;</strong></em> 不支持数据更新</p><p><em><strong>6&gt;</strong></em> 不支持索引</p><p><em><strong>7&gt;</strong></em> 执行延迟高</p><p><em><strong>8&gt;</strong></em> 可扩展性高</p><p><em><strong>9&gt;</strong></em> 数据规模大</p></li></ul><h2 id="ddl-操作" tabindex="-1"><a class="header-anchor" href="#ddl-操作" aria-hidden="true">#</a> DDL 操作</h2><p>启动 Hive 需要先启动 Hadoop 的 HDFS 服务</p><p>启动 Hive 的命令：<code>hive</code></p><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作" aria-hidden="true">#</a> 数据库操作</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> t1<span class="token punctuation">;</span>         <span class="token comment">-- 创建数据库</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> t1<span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token keyword">database</span> t1<span class="token punctuation">;</span>           <span class="token comment">-- 查看数据库的详细属性信息</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">database</span> t1<span class="token punctuation">;</span>    <span class="token comment">-- 查看创建数据库的详细语句</span>
<span class="token keyword">drop</span> <span class="token keyword">database</span> t1<span class="token punctuation">;</span>           <span class="token comment">-- 删除数据库</span>
<span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> t1<span class="token punctuation">;</span>
<span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>             <span class="token comment">-- 展示所有数据库</span>
<span class="token keyword">use</span> t1<span class="token punctuation">;</span>                     <span class="token comment">-- 使用数据库</span>
<span class="token keyword">select</span> current_database<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 显示当前使用的数据库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表" aria-hidden="true">#</a> 创建表</h3><h4 id="创建内部表" tabindex="-1"><a class="header-anchor" href="#创建内部表" aria-hidden="true">#</a> 创建内部表</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">,</span> sex string<span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">,</span> department string<span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">;</span>
<span class="token comment">-- row format：行的格式</span>
<span class="token comment">-- delimited fields：限制字段</span>
<span class="token comment">-- terminated by &#39;,&#39;：以 , 进行分割</span>

<span class="token comment">-- 通过查询来创建表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> student_1 <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">95012</span><span class="token punctuation">;</span>

<span class="token comment">-- 通过复制表结构来创建表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> student_copy <span class="token operator">like</span> student<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建外部表" tabindex="-1"><a class="header-anchor" href="#创建外部表" aria-hidden="true">#</a> 创建外部表</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> external <span class="token keyword">table</span> student_ext<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">,</span> sex string<span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">,</span> department string<span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&quot;,&quot;</span>
location <span class="token string">&quot;/hive/student_ext&quot;</span><span class="token punctuation">;</span>
<span class="token comment">-- external：创建外部表的关键字</span>
<span class="token comment">-- location：指定外部表的数据存储路径</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建分区表" tabindex="-1"><a class="header-anchor" href="#创建分区表" aria-hidden="true">#</a> 创建分区表</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> external <span class="token keyword">table</span> student_par<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">,</span> sex string<span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">,</span> department string<span class="token punctuation">)</span>
partitioned <span class="token keyword">by</span> <span class="token punctuation">(</span>city string<span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&quot;,&quot;</span>
location <span class="token string">&quot;/hive/student_par&quot;</span><span class="token punctuation">;</span>
<span class="token comment">-- 使用分区表，可以对各个分区的数据进行单独管理，单独计算分析后，再进行汇总，大大提升计算效率</span>
<span class="token comment">-- 一个分区就是一个目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建分桶表" tabindex="-1"><a class="header-anchor" href="#创建分桶表" aria-hidden="true">#</a> 创建分桶表</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> external <span class="token keyword">table</span> student_bck<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">,</span> sex string<span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">,</span> department string<span class="token punctuation">)</span>
<span class="token keyword">clustered</span> <span class="token keyword">by</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">into</span> <span class="token number">4</span> buckets
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&quot;,&quot;</span>
location <span class="token string">&quot;/hive/student_bck&quot;</span><span class="token punctuation">;</span>
<span class="token comment">-- 使用分桶表，可以很好地解决数据倾斜时的数据分析问题</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内部表和外部表的区别" tabindex="-1"><a class="header-anchor" href="#内部表和外部表的区别" aria-hidden="true">#</a> 内部表和外部表的区别</h3><p>参考资料：https://blog.csdn.net/liuge36/article/details/111425996</p><p><em><strong>1&gt;</strong></em> 在建表语句上，创建外部表需要加 <code>external</code> 关键字</p><p><em><strong>2&gt;</strong></em> 外部表可以自己指定存储位置，内部表保存在 <code>/user/hive/warehouse</code> 目录下</p><p><em><strong>3&gt;</strong></em> 删除内部表，元数据和数据同时删除；删除外部表，只删除数据，而不会删除真正的数据</p><p><em><strong>4&gt;</strong></em> 使用场景分析：数据是否需要共享，如果无需共享就可以使用内部表，外部表方便共享，容错性比较高</p><h3 id="查看表" tabindex="-1"><a class="header-anchor" href="#查看表" aria-hidden="true">#</a> 查看表</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>                  <span class="token comment">-- 查看当前数据库中的所有表格</span>
<span class="token keyword">show</span> <span class="token keyword">tables</span> <span class="token operator">like</span> <span class="token string">&#39;xx_stu*&#39;</span><span class="token punctuation">;</span>   <span class="token comment">-- 模糊查询表</span>
<span class="token keyword">desc</span> student<span class="token punctuation">;</span>                 <span class="token comment">-- 查看表的信息</span>
<span class="token keyword">desc</span> <span class="token keyword">extended</span> student<span class="token punctuation">;</span>        <span class="token comment">-- 查看表的扩展信息</span>
<span class="token keyword">desc</span> formatted student<span class="token punctuation">;</span>       <span class="token comment">-- 以美化的格式来查看表的扩展信息</span>
<span class="token keyword">show</span> partitions student_par<span class="token punctuation">;</span>  <span class="token comment">-- 查看分区信息</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">;</span>    <span class="token comment">-- 查看表的详细建表语句</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改表" tabindex="-1"><a class="header-anchor" href="#修改表" aria-hidden="true">#</a> 修改表</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">rename</span> <span class="token keyword">to</span> new_student<span class="token punctuation">;</span>      <span class="token comment">-- 修改表名</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">add</span> <span class="token keyword">columns</span> <span class="token punctuation">(</span>score <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">-- 增加字段</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student change name myname string<span class="token punctuation">;</span>  <span class="token comment">-- 修改字段名称</span>
<span class="token comment">-- 不支持删除字段和修改字段的数据类型</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> student_par <span class="token keyword">add</span> <span class="token keyword">partition</span><span class="token punctuation">(</span>city<span class="token operator">=</span><span class="token string">&quot;chongqing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 添加分区</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student_par <span class="token keyword">add</span> <span class="token keyword">partition</span><span class="token punctuation">(</span>city<span class="token operator">=</span><span class="token string">&quot;sichuan&quot;</span><span class="token punctuation">)</span> <span class="token keyword">partition</span><span class="token punctuation">(</span>city<span class="token operator">=</span><span class="token string">&quot;guizhou&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 一次添加多个分区</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student_par <span class="token keyword">drop</span> <span class="token keyword">partition</span><span class="token punctuation">(</span>city<span class="token operator">=</span><span class="token string">&#39;beijing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">-- 删除分区</span>

<span class="token keyword">truncate</span> <span class="token keyword">table</span> new_student<span class="token punctuation">;</span>  <span class="token comment">-- 清空表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> new_student<span class="token punctuation">;</span>      <span class="token comment">-- 删除表</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dml-操作" tabindex="-1"><a class="header-anchor" href="#dml-操作" aria-hidden="true">#</a> DML 操作</h2><p><em><strong>注</strong></em>：Hive 可以通过修改参数达到修改和删除数据的效果，但是速度远远没有传统关系型数据库快。频繁的 <code>update</code> 和 <code>delete</code> 操作已经违背了 Hive 的初衷，不到万不得已的情况不要进行数据的修改和删除</p><p>如果非要对Hive表中的数据进行修改或删除，通常是建新表，然后再把旧表数据导入到新表，再删除旧表</p><p>如果是删除表中数据，则使用</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> overwrite <span class="token keyword">table</span> t1 <span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age<span class="token punctuation">,</span> department <span class="token keyword">from</span> t1 <span class="token keyword">where</span> id <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="加载数据-load" tabindex="-1"><a class="header-anchor" href="#加载数据-load" aria-hidden="true">#</a> 加载数据 load</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 语法结构</span>
<span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token punctuation">[</span><span class="token keyword">local</span><span class="token punctuation">]</span> inpath <span class="token string">&#39;&lt;filepath&gt;&#39;</span> <span class="token punctuation">[</span>overwrite<span class="token punctuation">]</span> <span class="token keyword">into</span> <span class="token keyword">table</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">-- local：加上表示用本地文件向表格中加载数据；不加表示用 HDFS 文件系统中的文件向表格中加载数据</span>
<span class="token comment">-- overwrite：加上表示覆盖写入；不加表示追加写入</span>

<span class="token comment">-- 示例</span>
<span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">&#39;/root/student.data&#39;</span> <span class="token keyword">into</span> <span class="token keyword">table</span> student<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入数据-insert" tabindex="-1"><a class="header-anchor" href="#插入数据-insert" aria-hidden="true">#</a> 插入数据 insert</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 一次向一张表中插入数据</span>
<span class="token keyword">insert</span> overwrite <span class="token keyword">table</span> student_city_1
<span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age<span class="token punctuation">,</span> department
<span class="token keyword">from</span> student_city <span class="token keyword">where</span> city <span class="token operator">=</span> <span class="token string">&#39;hangzhou&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 一次向多张表中插入数据</span>
<span class="token keyword">from</span> student_city
<span class="token keyword">insert</span> overwrite <span class="token keyword">table</span> student_city_1
<span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age<span class="token punctuation">,</span> department <span class="token keyword">where</span> city <span class="token operator">=</span> <span class="token string">&#39;hangzhou&#39;</span>
<span class="token keyword">insert</span> overwrite <span class="token keyword">table</span> student_city_2
<span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age<span class="token punctuation">,</span> department <span class="token keyword">where</span> city <span class="token operator">=</span> <span class="token string">&#39;shanghai&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询数据并导出" tabindex="-1"><a class="header-anchor" href="#查询数据并导出" aria-hidden="true">#</a> 查询数据并导出</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 导出到本地</span>
<span class="token keyword">insert</span> overwrite <span class="token keyword">local</span> directory <span class="token string">&#39;/home/901&#39;</span>
<span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age <span class="token keyword">from</span> student_city<span class="token punctuation">;</span>

<span class="token comment">-- 导出到 HDFS 文件系统中</span>
<span class="token keyword">insert</span> overwrite directory <span class="token string">&#39;/out0&#39;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student_city<span class="token punctuation">;</span>

<span class="token comment">-- 导出到 HDFS 文件系统中的多个路径</span>
<span class="token keyword">from</span> student_city
<span class="token keyword">insert</span> overwrite directory <span class="token string">&#39;/out1&#39;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">where</span> city <span class="token operator">=</span> <span class="token string">&#39;hangzhou&#39;</span>
<span class="token keyword">insert</span> overwrite directory <span class="token string">&#39;/out2&#39;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">where</span> city <span class="token operator">=</span> <span class="token string">&#39;shanghai&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：导出的文件夹可以事先不存在</p><h3 id="查询数据-select" tabindex="-1"><a class="header-anchor" href="#查询数据-select" aria-hidden="true">#</a> 查询数据 select</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 分组查询</span>
<span class="token keyword">select</span> sex<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> count_1
<span class="token keyword">from</span> student
<span class="token keyword">group</span> <span class="token keyword">by</span> sex <span class="token keyword">having</span> count_1 <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 排序查询</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">desc</span><span class="token punctuation">;</span>

<span class="token comment">-- 在每个 reduce 任务中分别进行有序查询</span>
<span class="token keyword">set</span> mapreduce<span class="token punctuation">.</span>job<span class="token punctuation">.</span>reduces <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">-- 设置 reduce 任务的数量为 2</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student sort <span class="token keyword">by</span> age <span class="token keyword">desc</span><span class="token punctuation">;</span>

<span class="token comment">-- limit 限制数量，一般用于取前几条数据</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">limit</span> <span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关联查询-join" tabindex="-1"><a class="header-anchor" href="#关联查询-join" aria-hidden="true">#</a> 关联查询 join</h3><h4 id="inner-join-内连接" tabindex="-1"><a class="header-anchor" href="#inner-join-内连接" aria-hidden="true">#</a> inner join 内连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span>username<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dept_name<span class="token punctuation">,</span> s<span class="token punctuation">.</span>salarys
<span class="token keyword">from</span> xx_table_employee e
<span class="token keyword">join</span> xx_table_department d  <span class="token comment">-- 内连接的 inner 可以省略</span>
  <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>dept_id
<span class="token keyword">join</span> xx_table_salary s
  <span class="token keyword">on</span> e<span class="token punctuation">.</span>user_id <span class="token operator">=</span> s<span class="token punctuation">.</span>userid<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般情况下，一个 join 连接会生成一个 MapReduce job 任务，如果 join 连接超过 2 张表时，Hive 会从左到右的顺序对表进行关联操作，上面的 SQL，先启动一个 MapReduce job 任务对表 employee 和 dept 进行连接操作，然后在启动第二个 MapReduce job 对第一个 MapReduce job 输出的结果和表 salary 进行连接操作。这和标准 SQL 刚好相反，标准 SQL 是从右向左的顺序进行 join 操作的。因此在 Hive SQL 中，我们都是把小表写在左边，这样可以提高执行效率</p><p>Hive 支持使用 <code>/*+STREAMTALBE*/</code> 语法指定哪张表是大表，例如下面的 SQL，指定 dept 为大表，如果不使用 <code>/*+STREAMTALBE*/</code> 语法，Hive 认为最右边的表是大表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token comment">/* + STREAMTABlE(d) */</span> e<span class="token punctuation">.</span>username<span class="token punctuation">,</span> e<span class="token punctuation">.</span>dept_id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dept_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dept_id
<span class="token keyword">from</span> xx_table_employee e
<span class="token keyword">join</span> xx_table_department d
  <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>dept_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般情况下有多少张表进行 join 连接操作，就会启动多少个 MapReduce 任务，但是如果 <code>on</code> 条件的连接键都是一样的，那么则只会启动一个 MapReduce 任务</p><h4 id="left-outer-join-左外连接" tabindex="-1"><a class="header-anchor" href="#left-outer-join-左外连接" aria-hidden="true">#</a> left outer join 左外连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>username<span class="token punctuation">,</span> s<span class="token punctuation">.</span>salarys
<span class="token keyword">from</span> xx_table_employee e
<span class="token keyword">left</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> xx_table_salary s
             <span class="token keyword">on</span> e<span class="token punctuation">.</span>user_id <span class="token operator">=</span> s<span class="token punctuation">.</span>userid<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="right-outer-join-右外连接" tabindex="-1"><a class="header-anchor" href="#right-outer-join-右外连接" aria-hidden="true">#</a> right outer join 右外连接</h4><p>Hive 是处理大数据的组件，经常用于处理几百 G 甚至以 T 为单位的数据，因此在编写 SQL 时尽量用 <code>where</code> 条件过滤掉不符合条件的数据。但是对于左外连接和右外连接，<code>where</code> 条件是在 <code>on</code> 条件执行之后才会执行，因此为了优化 Hive SQL 执行的效率，在需要使用外连接的场景，尽量使用子查询，然后在子查询中使用 <code>where</code> 条件过滤掉不符合条件的数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e1<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span> e1<span class="token punctuation">.</span>username<span class="token punctuation">,</span> s<span class="token punctuation">.</span>salarys
<span class="token keyword">from</span> <span class="token punctuation">(</span>
      <span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span>
      <span class="token keyword">from</span> xx_table_employee e
      <span class="token keyword">where</span> e<span class="token punctuation">.</span>user_id <span class="token operator">&lt;</span> <span class="token number">8</span>
     <span class="token punctuation">)</span> e1
<span class="token keyword">right</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> xx_table_salary s
              <span class="token keyword">on</span> e1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> s<span class="token punctuation">.</span>userid<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="full-outer-join-全外连接" tabindex="-1"><a class="header-anchor" href="#full-outer-join-全外连接" aria-hidden="true">#</a> full outer join 全外连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>username<span class="token punctuation">,</span> s<span class="token punctuation">.</span>salarys
<span class="token keyword">from</span> xx_table_employee e
<span class="token keyword">full</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> xx_table_salary s
             <span class="token keyword">on</span> e<span class="token punctuation">.</span>user_id <span class="token operator">=</span> s<span class="token punctuation">.</span>userid
<span class="token keyword">where</span> e<span class="token punctuation">.</span>user_id <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="left-semi-join-左半开连接" tabindex="-1"><a class="header-anchor" href="#left-semi-join-左半开连接" aria-hidden="true">#</a> left semi join 左半开连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span>
<span class="token keyword">from</span> xx_table_employee e
<span class="token keyword">left</span> semi <span class="token keyword">join</span> xx_table_salary s
            <span class="token keyword">on</span> e<span class="token punctuation">.</span>user_id <span class="token operator">=</span> s<span class="token punctuation">.</span>userid<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>左半开连接是内连接的优化，当左边表的一条数据，在右边表中存在时，Hive 就停止扫描，因此效率比 <code>inner join</code> 高，但是左半开连接的 <code>select</code> 和 <code>where</code> 关键字后面只能出现左边表的字段，不能出现右边表的字段。Hive 不支持右半开连接</p><h4 id="笛卡尔-join-连接" tabindex="-1"><a class="header-anchor" href="#笛卡尔-join-连接" aria-hidden="true">#</a> 笛卡尔 join 连接</h4><p>笛卡尔积连接的结果是将左边表的数据乘以右边表的数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>username<span class="token punctuation">,</span> s<span class="token punctuation">.</span>salarys
<span class="token keyword">from</span> xx_table_employee e
<span class="token keyword">join</span> xx_table_salary s<span class="token punctuation">;</span>  <span class="token comment">-- 笛卡尔连接不写 on 关联条件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="map-side-join-连接" tabindex="-1"><a class="header-anchor" href="#map-side-join-连接" aria-hidden="true">#</a> map-side join 连接</h4><p>map 端连接，它是对 Hive SQL 的优化，Hive 是将 SQL 转化为 MpaReduce job，因此 Map 端连接对应的就是 Hadoop Join 连接中的 Map 端连接，将小表加载到内存中，以提高 Hive SQL 的执行速度</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token comment">/*+ MAPJOIN(d)*/</span> e<span class="token punctuation">.</span>username<span class="token punctuation">,</span> e<span class="token punctuation">.</span>dept_id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dept_name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dept_id
<span class="token keyword">from</span> xx_table_employee e
<span class="token keyword">join</span> xx_table_department d
  <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>dept_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="静态分区与动态分区" tabindex="-1"><a class="header-anchor" href="#静态分区与动态分区" aria-hidden="true">#</a> 静态分区与动态分区</h2><p>Hive 中支持的分区类型有两种：静态分区（static partition）和动态分区（dynamic partition）</p><p>以静态分区的方式导入数据时，其分区标识需要手动指定；而以动态分区的方式导入数据时，其分区标识是基于字段的不同值自动建立分区</p><h3 id="静态分区" tabindex="-1"><a class="header-anchor" href="#静态分区" aria-hidden="true">#</a> 静态分区</h3><h4 id="单分区" tabindex="-1"><a class="header-anchor" href="#单分区" aria-hidden="true">#</a> 单分区</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建分区</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t1<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">)</span>
partitioned <span class="token keyword">by</span><span class="token punctuation">(</span>department string<span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 向分区表中加载数据，需要指定分区</span>
<span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">&#39;/root/test.txt&#39;</span>
overwrite <span class="token keyword">into</span> <span class="token keyword">table</span> t1 <span class="token keyword">partition</span><span class="token punctuation">(</span>department <span class="token operator">=</span> <span class="token string">&#39;maths&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">desc</span> formatted t1<span class="token punctuation">;</span>   <span class="token comment">-- 查看分区表的表结构</span>
<span class="token keyword">show</span> partitions t1<span class="token punctuation">;</span>  <span class="token comment">-- 查看分区表有哪些分区</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> t1 <span class="token keyword">drop</span> <span class="token keyword">partition</span> <span class="token punctuation">(</span>department <span class="token operator">=</span> <span class="token string">&#39;maths&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 删除分区</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">where</span> department <span class="token operator">=</span> <span class="token string">&#39;chinese&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 查看某一分区的数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="多分区" tabindex="-1"><a class="header-anchor" href="#多分区" aria-hidden="true">#</a> 多分区</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建多分区表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t2<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">)</span>
partitioned <span class="token keyword">by</span> <span class="token punctuation">(</span>department string<span class="token punctuation">,</span> sex string<span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 向多分区表中加载数据，需要指定多个分区</span>
<span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">&#39;/root/test.txt&#39;</span>
<span class="token keyword">into</span> <span class="token keyword">table</span> t2 <span class="token keyword">partition</span><span class="token punctuation">(</span>department <span class="token operator">=</span> <span class="token string">&#39;maths&#39;</span><span class="token punctuation">,</span> sex <span class="token operator">=</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 查看某一分区的数据</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t2 <span class="token keyword">where</span> department <span class="token operator">=</span> <span class="token string">&#39;chinese&#39;</span> <span class="token operator">and</span> sex <span class="token operator">=</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：对于多分区表，导入数据时必须指定所有的分区字段标识</p><h3 id="动态分区" tabindex="-1"><a class="header-anchor" href="#动态分区" aria-hidden="true">#</a> 动态分区</h3><h4 id="多分区-1" tabindex="-1"><a class="header-anchor" href="#多分区-1" aria-hidden="true">#</a> 多分区</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建多分区的动态分区</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t4<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">)</span>
partitioned <span class="token keyword">by</span> <span class="token punctuation">(</span>age <span class="token keyword">int</span><span class="token punctuation">,</span> gender string<span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span><span class="token keyword">partition</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token comment">-- 开启动态分区</span>
<span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span><span class="token keyword">partition</span><span class="token punctuation">.</span><span class="token keyword">mode</span> <span class="token operator">=</span> nonstrict<span class="token punctuation">;</span>  <span class="token comment">-- 设置非严格模式</span>

<span class="token comment">-- 向动态分区中插入数据，不需要指定分区</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">table</span> t4 <span class="token keyword">partition</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span> gender<span class="token punctuation">)</span>
<span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender <span class="token keyword">from</span> t3<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="静态分区混合动态分区" tabindex="-1"><a class="header-anchor" href="#静态分区混合动态分区" aria-hidden="true">#</a> 静态分区混合动态分区</h4><p><em><strong>注</strong></em>：混合分区下，建表时静态分区字段需要排在动态分区字段的前面</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建静态混合动态的分区</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t5<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">)</span>
partitioned <span class="token keyword">by</span> <span class="token punctuation">(</span>country string<span class="token punctuation">,</span> city string<span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 向分区表中插入数据，需要指定静态分区，动态分区不需要指定</span>
<span class="token keyword">insert</span> overwrite <span class="token keyword">table</span> t5 <span class="token keyword">partition</span><span class="token punctuation">(</span>country <span class="token operator">=</span> <span class="token string">&#39;china&#39;</span><span class="token punctuation">,</span> city<span class="token punctuation">)</span>
<span class="token keyword">select</span> id<span class="token punctuation">,</span> city <span class="token keyword">from</span> t6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="动态分区的参数设置" tabindex="-1"><a class="header-anchor" href="#动态分区的参数设置" aria-hidden="true">#</a> 动态分区的参数设置</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span><span class="token keyword">partition</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>              <span class="token comment">-- 开启动态分区</span>
<span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span><span class="token keyword">partition</span><span class="token punctuation">.</span><span class="token keyword">mode</span><span class="token operator">=</span>nonstrict<span class="token punctuation">;</span>    <span class="token comment">-- 设置非严格模式</span>
<span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>max<span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span>partitions<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span>         <span class="token comment">-- 设置整个集群中总计的动态分区数量</span>
<span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>max<span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span>partitions<span class="token punctuation">.</span>pernode<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment">-- 设置每个节点上动态分区的个数</span>
<span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>max<span class="token punctuation">.</span>created<span class="token punctuation">.</span>files<span class="token operator">=</span><span class="token number">100000</span><span class="token punctuation">;</span>            <span class="token comment">-- 设置最大的文件的个数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态分区和动态分区的区别" tabindex="-1"><a class="header-anchor" href="#静态分区和动态分区的区别" aria-hidden="true">#</a> 静态分区和动态分区的区别</h3><ul><li><p><strong>静态分区</strong></p><p><em><strong>1&gt;</strong></em> 静态分区需手动指定分区标识</p><p><em><strong>2&gt;</strong></em> 支持 <code>load</code> 和 <code>insert</code> 两种插入方式</p><ul><li><p><em><strong>load 方式</strong></em>：</p><p><em><strong>a&gt;</strong></em> 会将分区标识全部修改为指定的内容</p><p><em><strong>b&gt;</strong></em> 一般是确定数据的分区标识一致的时候才会使用</p></li><li><p><em><strong>insert 方式</strong></em>：</p><p><em><strong>a&gt;</strong></em> 必须先将数据放在一个没有设置分区的普通表中</p><p><em><strong>b&gt;</strong></em> 该方式可以筛选原始表的数据，并导入指定的分区</p><p><em><strong>c&gt;</strong></em> 从普通表中查出的数据不能包含分区字段</p></li></ul><p><em><strong>3&gt;</strong></em> 适用于分区数少，分区标识可以明确的数据</p></li><li><p><strong>动态分区</strong></p><p><em><strong>1&gt;</strong></em> 根据分区字段的实际值，动态进行分区</p><p><em><strong>2&gt;</strong></em> 需要先将动态分区设置打开</p><p><em><strong>3&gt;</strong></em> 只能用 <code>insert</code> 方式</p><p><em><strong>4&gt;</strong></em> 通过原始表查询出的数据需包含分区字段</p></li></ul><h2 id="复杂的数据类型" tabindex="-1"><a class="header-anchor" href="#复杂的数据类型" aria-hidden="true">#</a> 复杂的数据类型</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 原始数据</span>
<span class="token number">1</span><span class="token operator">^</span>zs<span class="token operator">^</span>guangzhou<span class="token punctuation">,</span>xianggang<span class="token punctuation">,</span>shenzhen<span class="token operator">^</span>a1:<span class="token number">30</span><span class="token punctuation">,</span>a2:<span class="token number">20</span><span class="token punctuation">,</span>a3:<span class="token number">100</span><span class="token operator">^</span><span class="token number">30</span><span class="token punctuation">,</span>male<span class="token punctuation">,</span><span class="token number">1.75</span><span class="token punctuation">,</span><span class="token number">120</span>
<span class="token number">2</span><span class="token operator">^</span>ls<span class="token operator">^</span>xianggang<span class="token operator">^</span>b2:<span class="token number">50</span><span class="token punctuation">,</span>b3:<span class="token number">40</span><span class="token operator">^</span><span class="token number">25</span><span class="token punctuation">,</span>female<span class="token punctuation">,</span><span class="token number">1.68</span><span class="token punctuation">,</span><span class="token number">98</span>
<span class="token number">3</span><span class="token operator">^</span>ww<span class="token operator">^</span>beijing<span class="token punctuation">,</span>zhejiang<span class="token operator">^</span>c1:<span class="token number">200</span><span class="token operator">^</span><span class="token number">40</span><span class="token punctuation">,</span>male<span class="token punctuation">,</span><span class="token number">1.70</span><span class="token punctuation">,</span><span class="token number">110</span>

<span class="token comment">-- 创建表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> a<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> name string<span class="token punctuation">,</span>
               address array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">,</span>
               piaofang map<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
               info struct<span class="token operator">&lt;</span>age:<span class="token keyword">int</span><span class="token punctuation">,</span> sex:string<span class="token punctuation">,</span> height:<span class="token keyword">float</span><span class="token punctuation">,</span> weight:<span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&quot;^&quot;</span>
collection items <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&quot;,&quot;</span>
map <span class="token keyword">keys</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">&quot;/root/aa.txt&quot;</span> <span class="token keyword">into</span> <span class="token keyword">table</span> a<span class="token punctuation">;</span>  <span class="token comment">-- 向表中加载数据</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> a<span class="token punctuation">;</span>                           <span class="token comment">-- 查询所有数据</span>
<span class="token keyword">select</span> address <span class="token keyword">from</span> a<span class="token punctuation">;</span>                     <span class="token comment">-- 查询某一列数据</span>
<span class="token keyword">select</span> address<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">from</span> a<span class="token punctuation">;</span>                  <span class="token comment">-- 查询数组中的一列</span>
<span class="token keyword">select</span> piaofang<span class="token punctuation">[</span><span class="token string">&quot;a1&quot;</span><span class="token punctuation">]</span> <span class="token keyword">from</span> a<span class="token punctuation">;</span>              <span class="token comment">-- 查询 map 中某个 key 对应的 value</span>
<span class="token keyword">select</span> info <span class="token keyword">from</span> a<span class="token punctuation">;</span>                        <span class="token comment">-- 查询所有人的个人信息</span>
<span class="token keyword">select</span> info<span class="token punctuation">.</span>sex <span class="token keyword">from</span> a<span class="token punctuation">;</span>                    <span class="token comment">-- 查询所有人的性别</span>
<span class="token keyword">select</span> info<span class="token punctuation">.</span>age <span class="token keyword">from</span> a <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 查询 zs 的年龄</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hive-实现词频统计" tabindex="-1"><a class="header-anchor" href="#hive-实现词频统计" aria-hidden="true">#</a> Hive 实现词频统计</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 准备文本 /root/wc.txt</span>
hello world world
hello one two world

<span class="token comment">-- 新建表格</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> wc<span class="token punctuation">(</span>line string<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 加载数据到表格中</span>
<span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">&quot;/root/wc.txt&quot;</span> <span class="token keyword">into</span> <span class="token keyword">table</span> wc<span class="token punctuation">;</span>

<span class="token comment">-- 分割文本</span>
<span class="token keyword">select</span> split<span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&#39;\\\\s&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> word <span class="token keyword">from</span> wc<span class="token punctuation">;</span>

<span class="token comment">-- 行转列</span>
<span class="token keyword">select</span> explode<span class="token punctuation">(</span>split<span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&#39;\\\\s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> word <span class="token keyword">from</span> wc<span class="token punctuation">;</span>

<span class="token comment">-- 统计计数</span>
<span class="token keyword">select</span> word<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> count
<span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> explode<span class="token punctuation">(</span>split<span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&#39;\\\\s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> word <span class="token keyword">from</span> wc<span class="token punctuation">)</span> w
<span class="token keyword">group</span> <span class="token keyword">by</span> word
<span class="token keyword">order</span> <span class="token keyword">by</span> count <span class="token keyword">desc</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,89);function u(m,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[d,n("p",null,[s("参考资料："),n("a",r,[s("https://www.lanqiao.cn/courses/3402/learning/?id=126508"),c(a)])]),k])}const w=e(i,[["render",u],["__file","04_Hive.html.vue"]]);export{w as default};
