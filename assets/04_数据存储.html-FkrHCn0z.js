import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as p}from"./app-VKLC1A-x.js";const t={},e=p(`<h1 id="数据存储" tabindex="-1"><a class="header-anchor" href="#数据存储" aria-hidden="true">#</a> 数据存储</h1><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> JSON</h2><p>JSON（JavaScript Object Notation，JS对象标记）是一种轻量级的数据交换格式，它基于ECMAScript（w3c制定的js规范）的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得JSON成为理想的数据交换语言。易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率</p><ul><li><p><strong>JSON支持的数据格式</strong></p><p><em><strong>1&gt;</strong></em> 对象（字典），使用花括号<code>{}</code></p><p><em><strong>2&gt;</strong></em> 数组（列表），使用中括号<code>[]</code></p><p><em><strong>3&gt;</strong></em> 整型、浮点型、布尔类型、<code>null</code>类型</p><p><em><strong>4&gt;</strong></em> 字符串类型（字符串必须要用双引号<code>&quot;&quot;</code>，不能用单引号）</p><p>多个数据之间使用逗号<code>,</code>隔开</p><p><em><strong>注</strong></em>：JSON本质上就是一个字符串</p><p>JSON在线解析及格式化验证：https://www.json.cn/</p></li><li><p><strong>Python对象转换为JSON</strong></p><p><code>json.dumps()</code>：将Python对象转换为JSON字符串</p><p><code>json.dump()</code>：将Python对象转换为JSON字符串并写入指定文件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json
persons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;country&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;China&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>
json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>persons<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;persons.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>persons<span class="token punctuation">,</span> fp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：<code>json.dumps()</code>和<code>json.dump()</code>在转换含有中文字符的Python对象时会将中文字符转换成<code>Unicode</code>类型，为了解决这一问题需要将<code>ensure_ascii</code>参数设置为<code>False</code>（默认的是<code>True</code>），如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>persons<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;persons.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>persons<span class="token punctuation">,</span> fp<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：在Python中，只有基本数据类型才能转换成JSON格式的字符串，即：<code>int</code>、<code>float</code>、<code>str</code>、<code>list</code>、<code>dict</code>、<code>tuple</code></p></li><li><p><strong>JSON转换为Python对象</strong></p><p><code>json.loads()</code>：将JSON字符串转换为Python对象</p><p><code>json.load()</code>：从<code>json</code>文件中读取JSON字符串，并转换为Python对象</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json
json_str <span class="token operator">=</span> <span class="token string">&#39;[{&quot;username&quot;: &quot;张三&quot;, &quot;age&quot;: 18, &quot;country&quot;: &quot;China&quot;}]&#39;</span>
persons <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;persons.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    persons <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>fp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="csv文件" tabindex="-1"><a class="header-anchor" href="#csv文件" aria-hidden="true">#</a> CSV文件</h2><p>“CSV”并不是一种单一的、定义明确的格式，在实践中，术语“CSV”泛指具有以下特征的任何文件：</p><p><em><strong>1&gt;</strong></em> 纯文本，使用某个字符集，比如ASCII、Unicode、EBCDIC或GB2312</p><p><em><strong>2&gt;</strong></em> 由记录组成（典型的是每行一条记录）</p><p><em><strong>3&gt;</strong></em> 每条记录被分隔符分隔为字段（典型分隔符有逗号、分号或制表符，有时分隔符可以包括可选的空格）</p><p><em><strong>4&gt;</strong></em> 每条记录都有同样的字段序列</p><p>参考资料：https://baike.baidu.com/item/CSV/10739?fr=aladdin</p><ul><li><p><strong>读取CSV文件</strong></p><ul><li><p><em><strong>方法一：csv.reader()方法</strong></em></p><p>使用<code>csv.reader()</code>方法读取CSV文件，返回的是一个迭代器，遍历迭代器得到的是每行数据组成的列表，所以可以通过下标进行操作，并且<a href=""><em>文件中第一行的标题会成为迭代器的第一个元素</em></a>，如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;cities.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>fp<span class="token punctuation">)</span>  <span class="token comment"># 返回的reader是一个迭代器</span>
    <span class="token keyword">for</span> x <span class="token keyword">in</span> reader<span class="token punctuation">:</span>  <span class="token comment"># 遍历出来的x是每行数据组成的列表</span>
        country <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><em><strong>方法二：csv.DictReader()方法</strong></em></p><p>使用<code>csv.DictReader()</code>方法读取CSV文件，返回的是一个迭代器，遍历迭代器得到的是每行数据组成的有序字典，文件中第一行的标题会成为每个字典中的键，值是每行数据对应的值，如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;cities.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictReader<span class="token punctuation">(</span>fp<span class="token punctuation">)</span>  <span class="token comment"># 返回的reader是一个迭代器</span>
    <span class="token keyword">for</span> x <span class="token keyword">in</span> reader<span class="token punctuation">:</span>  <span class="token comment"># 遍历出来的x是每行数据组成的有序字典</span>
        value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;country&#39;</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token string">&#39;country&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token string">&#39;city&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>写入数据到CSV文件</strong></p><ul><li><p><em><strong>方法一：csv.writer()方法</strong></em></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv
headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;height&#39;</span><span class="token punctuation">]</span>
persons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">178</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">176</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>
<span class="token comment"># 参数newline默认值是&#39;\\n&#39;，这会导致每写入一行数据就会空一行，设置为&#39;&#39;即可解决问题</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;persons.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>fp<span class="token punctuation">)</span>
    writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>headers<span class="token punctuation">)</span>  <span class="token comment"># writer.writerow()：写入一行数据</span>
    writer<span class="token punctuation">.</span>writerows<span class="token punctuation">(</span>persons<span class="token punctuation">)</span>  <span class="token comment"># writer.writerows()：写入多行数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><em><strong>方法二：csv.DictWriter()方法</strong></em></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv
headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;height&#39;</span><span class="token punctuation">]</span>
persons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;height&#39;</span><span class="token punctuation">:</span> <span class="token number">180</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
           <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;height&#39;</span><span class="token punctuation">:</span> <span class="token number">178</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;persons2.csv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictWriter<span class="token punctuation">(</span>fp<span class="token punctuation">,</span> headers<span class="token punctuation">)</span>  <span class="token comment"># 传入文件和表头数据</span>
    writer<span class="token punctuation">.</span>writeheader<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 写入表头数据</span>
    writer<span class="token punctuation">.</span>writerows<span class="token punctuation">(</span>persons<span class="token punctuation">)</span>  <span class="token comment"># 写入多行数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul>`,12),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","04_数据存储.html.vue"]]);export{k as default};
