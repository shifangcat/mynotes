import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as e}from"./app-VKLC1A-x.js";const p={},o=e(`<h1 id="关联查询" tabindex="-1"><a class="header-anchor" href="#关联查询" aria-hidden="true">#</a> 关联查询</h1><p>连接查询/多表关联查询：使用多张表连接起来进行查询，拿到想要的结果。分为内连接和外连接</p><h2 id="内连接" tabindex="-1"><a class="header-anchor" href="#内连接" aria-hidden="true">#</a> 内连接</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 要查询的字段
<span class="token keyword">FROM</span> 表<span class="token number">1</span>
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span>      <span class="token comment">-- INNER可以省略</span>
        <span class="token keyword">ON</span> 关联字段  <span class="token comment">-- 表1中的某个字段跟表2中的某个字段关联起来</span>
       <span class="token operator">AND</span> 过滤条件<span class="token punctuation">;</span>

<span class="token comment">-- 查询EMP表薪资高于1200员工的部门名称以及办公地址</span>
<span class="token comment">-- 输出：员工姓名,部门编号,部门名称,办公地址</span>
<span class="token comment">-- 标准SQL写法</span>
<span class="token keyword">SELECT</span> E<span class="token punctuation">.</span>ENAME<span class="token punctuation">,</span> E<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">,</span> D<span class="token punctuation">.</span>DNAME<span class="token punctuation">,</span> D<span class="token punctuation">.</span>LOC
<span class="token keyword">FROM</span> EMP E
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> DEPT D
        <span class="token keyword">ON</span> E<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> D<span class="token punctuation">.</span>DEPTNO
       <span class="token operator">AND</span> E<span class="token punctuation">.</span>SAL <span class="token operator">&gt;</span> <span class="token number">1200</span><span class="token punctuation">;</span>

<span class="token comment">-- ORACLE内关联的写法</span>
<span class="token keyword">SELECT</span> E<span class="token punctuation">.</span>ENAME<span class="token punctuation">,</span> E<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">,</span> D<span class="token punctuation">.</span>DNAME<span class="token punctuation">,</span> D<span class="token punctuation">.</span>LOC
<span class="token keyword">FROM</span> EMP E<span class="token punctuation">,</span> DEPT D
<span class="token keyword">WHERE</span> E<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> D<span class="token punctuation">.</span>DEPTNO
<span class="token operator">AND</span> E<span class="token punctuation">.</span>SAL <span class="token operator">&gt;</span> <span class="token number">1200</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：内连接中，<code>WHERE</code>和<code>AND</code>的过滤效果相同</p><p><em><strong>注</strong></em>：不写关联字段会生成笛卡尔乘积，行数为两表行数相乘，字段为两表字段相加</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 关联字段是非常灵活的，不一定要是相同的字段，</span>
<span class="token comment">-- 即使是不同的字段，只要能满足关联条件，就能筛选出对应的结果</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP E
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> DEPT D
<span class="token keyword">ON</span> E<span class="token punctuation">.</span>SAL<span class="token operator">/</span><span class="token number">40</span> <span class="token operator">=</span> D<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="外连接" tabindex="-1"><a class="header-anchor" href="#外连接" aria-hidden="true">#</a> 外连接</h2><p>当我们需要知道某一张表里面的所有数据跟另外一张表关联数据的时候，就要用到外连接</p><p>在外连接中，主表的字段和全部的数据都会保留，从表关联不上的字段会设置为空（NULL）</p><p>外连接（OUTER JOIN）分为左(外)连接、右(外)连接、全(外)连接</p><h3 id="左连接" tabindex="-1"><a class="header-anchor" href="#左连接" aria-hidden="true">#</a> 左连接</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 要查询的字段
<span class="token keyword">FROM</span> 表<span class="token number">1</span>       <span class="token comment">-- 主表，主表的数据就算不满足关联条件也可以被查询出来，</span>
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span>  <span class="token comment">-- 从表，关联不上的补空</span>
       <span class="token keyword">ON</span> 关联字段
      <span class="token operator">AND</span> 过滤条件<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> DEPT D  <span class="token comment">-- A LEFT JOIN B，左边是主表</span>
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> EMP E 
       <span class="token keyword">ON</span> E<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> D<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>左连接和内连接的区别</strong><ul><li>语法结构上，内连接是<code>[INNER] JOIN</code>，左连接是<code>LEFT JOIN</code></li><li>结果上，内连接取的是两个表的交集；左外连接取得是主表的所有信息加上关联到的从表的信息，主表的数据就算不满足关联条件也可以被查询出来，从表不够的就用<code>NULL</code>补全剩余的行数</li></ul></li></ul><p><em><strong>注</strong></em>：<code>LEFT JOIN</code>的时候，<code>WHERE</code>和<code>AND</code>是有区别的：<code>WHERE</code>可以过滤主从表的所有数据；<code>AND</code>只能过滤从表数据（可以理解为关联条件）</p><h3 id="右连接" tabindex="-1"><a class="header-anchor" href="#右连接" aria-hidden="true">#</a> 右连接</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 要查询的字段
<span class="token keyword">FROM</span> 表<span class="token number">1</span>        <span class="token comment">-- 从表</span>
<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span>  <span class="token comment">-- 主表</span>
        <span class="token keyword">ON</span> 关联字段
       <span class="token operator">AND</span> 过滤条件<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> EMP E  <span class="token comment">-- A RIGHT JOIN B，右边是主表</span>
<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> DEPT D
        <span class="token keyword">ON</span> E<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> D<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ul><li><p>内连接&amp;外连接语法都是一样的：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>A表 <span class="token punctuation">[</span><span class="token keyword">INNER</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">LEFT</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">RIGHT</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> B表 <span class="token keyword">ON</span> 关联条件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>内连接取的是两张表的交集；外连接取的是主表的全量结果集（从表的字段能找到则输出，找不到则输出 <code>NULL</code>）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>A <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> B   <span class="token comment">-- A是主表，B是从表</span>
A <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> B  <span class="token comment">-- B是主表，A是从表 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>（了解）Oracl特有的左右连接写法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 左连接</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP E<span class="token punctuation">,</span> DEPT D
<span class="token keyword">WHERE</span> E<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> D<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 右连接</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP E<span class="token punctuation">,</span> DEPT D
<span class="token keyword">WHERE</span> E<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">=</span> D<span class="token punctuation">.</span>DEPTNO<span class="token punctuation">;</span>

<span class="token comment">-- 带 + 号的表示是从表</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>连接查询的时候条件在<code>WHERE</code>后面跟<code>AND</code>后面的区别：</p><p>内连接的时候结果没区别；外连接的时候过滤条件放到<code>AND</code>后面只对从表输出结果有过滤的效果，放到<code>WHERE</code>后面能过滤主从表的所有数据</p></li></ul><h3 id="全外连接" tabindex="-1"><a class="header-anchor" href="#全外连接" aria-hidden="true">#</a> 全外连接</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 要查询的字段
<span class="token keyword">FROM</span> 表<span class="token number">1</span>
<span class="token keyword">FULL</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> 
       <span class="token keyword">ON</span> 关联字段
    <span class="token keyword">WHERE</span> 过滤条件<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> T_CUNKUAN A
<span class="token keyword">FULL</span> <span class="token keyword">JOIN</span> T_DAIKUAN B 
<span class="token keyword">ON</span> A<span class="token punctuation">.</span>USER_NAME<span class="token operator">=</span>B<span class="token punctuation">.</span>USER_NAME
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>总结</strong><ul><li><p><code>FULL JOIN</code>取的是两张表的全量结果集，关联不上的互相补空</p></li><li><p>两张表的共有字段，可以用<code>NVL()</code>处理（防止有的数据在A表有B表没有，有的数据在B表有A表没有）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> NVL<span class="token punctuation">(</span>A<span class="token punctuation">.</span>USER_NAME<span class="token punctuation">,</span> B<span class="token punctuation">.</span>USER_NAME<span class="token punctuation">)</span> USER_NAME<span class="token punctuation">,</span>
       NVL<span class="token punctuation">(</span>A<span class="token punctuation">.</span>AMOUNT<span class="token punctuation">,</span> B<span class="token punctuation">.</span>AMOUNT<span class="token punctuation">)</span>       AMOUNT
<span class="token keyword">FROM</span> T_CUNKUAN A
<span class="token keyword">FULL</span> <span class="token keyword">JOIN</span> T_DAIKUAN B
<span class="token keyword">ON</span> A<span class="token punctuation">.</span>USER_NAME<span class="token operator">=</span>B<span class="token punctuation">.</span>USER_NAME<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="自关联" tabindex="-1"><a class="header-anchor" href="#自关联" aria-hidden="true">#</a> 自关联</h2><p>自关联：自己跟自己关联，通常当一个表中存在上下级关系时会使用自关联</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> E1<span class="token punctuation">.</span>EMPNO 员工编号<span class="token punctuation">,</span>
       E1<span class="token punctuation">.</span>ENAME 员工姓名<span class="token punctuation">,</span>
       E1<span class="token punctuation">.</span>MGR   经理编号<span class="token punctuation">,</span>
       E2<span class="token punctuation">.</span>ENAME 经理姓名
<span class="token keyword">FROM</span> EMP E1
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> EMP E2
<span class="token keyword">ON</span> E1<span class="token punctuation">.</span>MGR <span class="token operator">=</span> E2<span class="token punctuation">.</span>EMPNO<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="不等值关联" tabindex="-1"><a class="header-anchor" href="#不等值关联" aria-hidden="true">#</a> 不等值关联</h2><p>不等值关联可以实现数据发散（查出的结果比原表数据多）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> EMP E 
<span class="token keyword">JOIN</span> DEPT D 
<span class="token keyword">ON</span> D<span class="token punctuation">.</span>DEPTNO <span class="token operator">&lt;</span> E<span class="token punctuation">.</span>SAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：<code>*</code>不能和字段一起单独查询，想要一起查询需要给表添加别名</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span> ENAME <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>      <span class="token comment">-- 报错</span>
<span class="token keyword">SELECT</span> E<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> ENAME <span class="token keyword">FROM</span> EMP E<span class="token punctuation">;</span>  <span class="token comment">-- 正常运行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,30),l=[o];function c(t,i){return s(),a("div",null,l)}const u=n(p,[["render",c],["__file","04_关联查询.html.vue"]]);export{u as default};
