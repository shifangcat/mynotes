import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o,c as i,b as e,d as t,e as n,f as d}from"./app-VKLC1A-x.js";const g="/mynotes/assets/数据分层-1-Zne8wQVE.png",h="/mynotes/assets/数据分层-2-2nnISUgA.png",l="/mynotes/assets/数据分层-3-4T1QbgLM.png",p={},c=e("h1",{id:"数据分层",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据分层","aria-hidden":"true"},"#"),t(" 数据分层")],-1),_=e("p",null,"参考资料：",-1),m={href:"https://blog.csdn.net/thdline/article/details/107025207",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/lightupworld/article/details/108716552",target:"_blank",rel:"noopener noreferrer"},u={href:"https://blog.csdn.net/qq_56870570/article/details/118938411",target:"_blank",rel:"noopener noreferrer"},D=d('<h2 id="数据分层的目的" tabindex="-1"><a class="header-anchor" href="#数据分层的目的" aria-hidden="true">#</a> 数据分层的目的</h2><p><em><strong>1&gt;</strong></em> <strong>清晰数据结构</strong>：每一个数据分层都有其作用域，让我们在使用表的时候能方便的定位和理解</p><p><em><strong>2&gt;</strong></em> <strong>数据血缘追踪</strong>：可以这样理解，我们最终的目的是为了给业务部门呈现一张能直接使用的业务表，但是数据的表中的数据来源有很多，如果有一张源表出现了问题，我们希望能够快速准确地定位到问题，并清楚影响范围</p><p><em><strong>3&gt;</strong></em> <strong>减少重复开发</strong>：开发一些通用的中间层，能够极大地减少数据的重复计算</p><p><em><strong>4&gt;</strong></em> <strong>复杂问题简单化</strong>：将复杂的任务分解成多个步骤来完成，每一层只处理单一的步骤，比较简单和容易理解。而且便于维护数据的准确性，当数据出现问题之后可以不用修复所有的数据，只需要从出现问题的步骤开始修复即可</p><p><em><strong>5&gt;</strong></em> <strong>屏蔽原始数据的异常</strong></p><p><em><strong>6&gt;</strong></em> <strong>屏蔽业务的影响</strong>，不必改一次业务就需要重新接入数据</p><h2 id="数据分层-1" tabindex="-1"><a class="header-anchor" href="#数据分层-1" aria-hidden="true">#</a> 数据分层</h2><figure><img src="'+g+'" alt="数据分层" tabindex="0" loading="lazy"><figcaption>数据分层</figcaption></figure><h3 id="ods-层" tabindex="-1"><a class="header-anchor" href="#ods-层" aria-hidden="true">#</a> ODS 层</h3><p>ODS 层（Operational Data Store），又称数据贴源层、数据运营层</p><p><strong>数据来源包括</strong>：<em><strong>Kettle/Sqoop 数据导入</strong></em>；Canal 监控 MySQL binlog 实时导入；flume/网关 -&gt; kafka -&gt; flink/streaming 流导入</p><p><strong>主要作用</strong>：ODS 层存储的是从业务系统导入的<em><strong>原始数据</strong></em>，数据过来的同时，甲乙双方通常会开会沟通业务需求</p><p><em><strong>注</strong></em>：有些 ODS 层并非完全是原始数据，而是要考虑一定数据清洗，比如异常字段的处理、字段命名规范化、时间字段统一等处理后的结果（这个要看具体情况，毕竟不同公司、不同业务场景情况不同）</p><p><em><strong>注</strong></em>：有些公司会在源系统和 ODS 层之间增加一个 T 层（数据缓冲层）；大部分公司会将 T 层和 ODS 层统称为 ODS 层</p><h3 id="dwd-层" tabindex="-1"><a class="header-anchor" href="#dwd-层" aria-hidden="true">#</a> DWD 层</h3><p>DWD 层（Dudata Warehouse Detail），又称数据整合层、轻粒度汇总层</p><p><strong>主要作用</strong>：进行空值的过滤，格式的转换等数据清洗类的工作，多表连接整合的操作</p><h3 id="dws-层" tabindex="-1"><a class="header-anchor" href="#dws-层" aria-hidden="true">#</a> DWS 层</h3><p>DWS 层（Data Warehouse Service），又称数据汇总层</p><p><strong>主要作用</strong>：对指标进行计算，将计算后的结果进行保存</p><p><em><strong>注</strong></em>：DWD 层和 DWS 层可以合并到一起，统称为 DW 层（数据整合层）</p><h3 id="ads-层" tabindex="-1"><a class="header-anchor" href="#ads-层" aria-hidden="true">#</a> ADS 层</h3><p>ADS 层（Application Data Store），又称数据应用层、宽表层</p><p><strong>主要作用</strong>：将多个指标（如：贷款使用率、基金销售额、信用卡额度等）联合起来形成宽表</p><p><strong>宽表</strong>存在的意义是为了进行数据挖掘，宽表形成的数据会落地成文件（csv、Excel格式）</p><p><strong>宽表</strong>一般有七八十个到一百多个字段（指标）</p><h2 id="多种数据分层方式" tabindex="-1"><a class="header-anchor" href="#多种数据分层方式" aria-hidden="true">#</a> 多种数据分层方式</h2><h3 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一" aria-hidden="true">#</a> 方式一</h3><figure><img src="'+h+'" alt="数据分层" tabindex="0" loading="lazy"><figcaption>数据分层</figcaption></figure><h3 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二" aria-hidden="true">#</a> 方式二</h3><figure><img src="'+l+'" alt="数据分层" tabindex="0" loading="lazy"><figcaption>数据分层</figcaption></figure>',32);function b(x,S){const r=s("ExternalLinkIcon");return o(),i("div",null,[c,_,e("p",null,[t("数据分层/ODS/DW/DM："),e("a",m,[t("https://blog.csdn.net/thdline/article/details/107025207"),n(r)])]),e("p",null,[t("数据仓库——数仓分层："),e("a",f,[t("https://blog.csdn.net/lightupworld/article/details/108716552"),n(r)])]),e("p",null,[t("Hive之数仓的分层及建模理论："),e("a",u,[t("https://blog.csdn.net/qq_56870570/article/details/118938411"),n(r)])]),D])}const O=a(p,[["render",b],["__file","11_数据分层.html.vue"]]);export{O as default};
