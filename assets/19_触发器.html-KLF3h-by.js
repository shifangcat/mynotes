import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,f as e}from"./app-VKLC1A-x.js";const p={},o=e(`<h1 id="触发器" tabindex="-1"><a class="header-anchor" href="#触发器" aria-hidden="true">#</a> 触发器</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>触发器的定义就是说某个条件成立的时候，触发器里面所定义的语句就会被自动的执行。因此触发器不需要人为的去调用，也不能调用，触发器的触发条件其实在你定义的时候就已经设定好了</p><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h2><ul><li><p><strong>语句级触发器</strong></p><p>在某些语句执行前或执行后被触发。在一个表中定义的语句级的触发器，当这个表被删除时，程序就会自动执行触发器里面定义的操作过程。这个删除表的操作就是触发器执行的条件了</p></li><li><p><strong>行级触发器</strong></p><p>在定义了触发器的表中的行数据改变时就会被触发一次。在一个表中定义了行级的触发器，那当这个表中一行数据发生变化的时候，比如删除了一行记录，那触发器也会被自动执行</p></li></ul><h2 id="创建触发器" tabindex="-1"><a class="header-anchor" href="#创建触发器" aria-hidden="true">#</a> 创建触发器</h2><h3 id="语法结构" tabindex="-1"><a class="header-anchor" href="#语法结构" aria-hidden="true">#</a> 语法结构</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token operator">OR</span> <span class="token keyword">REPLACE</span><span class="token punctuation">]</span> TIGGER 触发器名 触发时间 触发事件
<span class="token keyword">ON</span> 表名
<span class="token punctuation">[</span><span class="token keyword">FOR EACH ROW</span><span class="token punctuation">]</span>  <span class="token comment">-- 定义行级触发器时写</span>
<span class="token keyword">BEGIN</span>
  <span class="token comment">-- PL/SQL语句</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>触发器名：触发器对象的名称。由于触发器是数据库自动执行的，因此该名称只是一个名称，没有实质的用途</p><p>触发时间：指明触发器何时执行，该值可取</p><p>​ BEFORE：表示在数据库动作之前触发器执行</p><p>​ AFTER：表示在数据库动作之后触发器执行</p><p>触发事件：指明哪些数据库动作会触发此触发器</p><p>​ INSERT：数据库插入会触发此触发器</p><p>​ UPDATE：数据库修改会触发此触发器</p><p>​ DELETE：数据库删除会触发此触发器</p><p>表名：数据库触发器所在的表</p><p>FOR EACH ROW：对表的每一行触发器执行一次。如果没有这一选项，则只对整个表执行一次</p></blockquote><h3 id="创建语句级触发器" tabindex="-1"><a class="header-anchor" href="#创建语句级触发器" aria-hidden="true">#</a> 创建语句级触发器</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 下面的触发器在更新表 EMP 之前触发，目的是不允许在星期五修改表</span>
<span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">TRIGGER</span> EMP_TRI
BEFORE <span class="token keyword">INSERT</span> <span class="token operator">OR</span> <span class="token keyword">UPDATE</span> <span class="token operator">OR</span> <span class="token keyword">DELETE</span>
<span class="token keyword">ON</span> EMP
<span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> <span class="token punctuation">(</span>TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;DY&#39;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;星期五&#39;</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    RAISE_APPLICATION_ERROR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20001</span><span class="token punctuation">,</span> <span class="token string">&#39;不能在星期五修改表emp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>RAISE_APPLICATION_ERROR</code> 是触发一个异常报错指令</p><p><code>RAISE_APPLICATION_ERROR(自定义的一个异常码, 异常说明)</code></p></blockquote><h3 id="创建行级触发器" tabindex="-1"><a class="header-anchor" href="#创建行级触发器" aria-hidden="true">#</a> 创建行级触发器</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建触发器，比较 EMP 表中更新的工资</span>
<span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">TRIGGER</span> EMP_SAL_SAL_TRI
BEFORE <span class="token keyword">UPDATE</span>
<span class="token keyword">ON</span> EMP
<span class="token keyword">FOR EACH ROW</span>
<span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> :OLD<span class="token punctuation">.</span>SAL <span class="token operator">&gt;</span> :NEW<span class="token punctuation">.</span>SAL <span class="token keyword">THEN</span>
    RAISE_APPLICATION_ERROR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20002</span><span class="token punctuation">,</span> <span class="token string">&#39;工资不能比之前少&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除触发器" tabindex="-1"><a class="header-anchor" href="#删除触发器" aria-hidden="true">#</a> 删除触发器</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TRIGGER</span> 触发器名<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TRIGGER</span> EMP_TRI<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,16),t=[o];function l(c,i){return n(),a("div",null,t)}const k=s(p,[["render",l],["__file","19_触发器.html.vue"]]);export{k as default};
