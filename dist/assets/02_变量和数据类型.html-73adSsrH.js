import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as o,f as n}from"./app-VKLC1A-x.js";const d={},r=n(`<h1 id="变量和数据类型" tabindex="-1"><a class="header-anchor" href="#变量和数据类型" aria-hidden="true">#</a> 变量和数据类型</h1><h2 id="标识符和保留字" tabindex="-1"><a class="header-anchor" href="#标识符和保留字" aria-hidden="true">#</a> 标识符和保留字</h2><h3 id="保留字" tabindex="-1"><a class="header-anchor" href="#保留字" aria-hidden="true">#</a> 保留字</h3><p>有一些单词被赋予了特定的含义，这些单词在你给任何对象起名字的时候都不能用</p><p><em><strong>注</strong></em>：可以用下列代码导出保留字：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> keyword

<span class="token keyword">print</span><span class="token punctuation">(</span>keyword<span class="token punctuation">.</span>kwlist<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="标识符" tabindex="-1"><a class="header-anchor" href="#标识符" aria-hidden="true">#</a> 标识符</h3><p>变量、函数、类、模块和其他对象的名字就叫标识符</p><p><strong>命名规则</strong>：</p><p><em><strong>1&gt;</strong></em> 只能由字母、数字、下划线组成</p><p><em><strong>2&gt;</strong></em> 不能以数字开头</p><p><em><strong>3&gt;</strong></em> 不能是保留字</p><p><em><strong>4&gt;</strong></em> 严格区分大小写</p><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><p>其值可以改变的量。像是一个带有标签的盒子，可以把数据放进去</p><p>如：<code>name = &#39;玛利亚&#39;</code>，<code>name</code>：变量名，<code>=</code>：赋值运算符，<code>玛利亚</code>：值</p><p><strong>组成</strong>：</p><p><strong>标识</strong>：表示对象所存储的内存地址，使用内置函数 <code>id(obj)</code> 获取</p><p><strong>类型</strong>：表示对象的数据类型，使用内置函数 <code>type(obj)</code> 获取</p><p><strong>值</strong>：表示对象存储的具体数据，使用 <code>print(obj)</code> 可以将值输出</p><p><em><strong>注</strong></em>：当变量被多次赋值之后，变量名会指向新的空间</p><p><strong>变量名由两个或多个单词组成时</strong>：</p><p><em><strong>1&gt;</strong></em> <em><strong>每个单词都小写</strong></em>，用 <code>_</code> 连接。如：<code>first_name</code>、<code>qq_number</code></p><p><em><strong>2&gt;</strong></em> <em><strong>小驼峰命名法</strong></em>：第一个单词以小写字母开始，后续单词首字母大写。如：<code>firstName</code>、<code>qqNumber</code></p><p><em><strong>3&gt;</strong></em> <em><strong>大驼峰命名法</strong></em>：每一个单词首字母都大写。如：<code>FirstName</code>、<code>LastName</code></p><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><h3 id="整数类型" tabindex="-1"><a class="header-anchor" href="#整数类型" aria-hidden="true">#</a> 整数类型</h3><p>英文为 <code>integer</code>，简写为 <code>int</code>，可以表示正数、负数和零，如：<code>98</code></p><p><strong>不同进制的表示方式</strong>：</p><p>十进制：默认进制</p><p>二进制：以 <code>0b</code> 开头</p><p>八进制：以 <code>0o</code> 开头</p><p>十六进制：以 <code>0x</code> 开头</p><h3 id="浮点类型" tabindex="-1"><a class="header-anchor" href="#浮点类型" aria-hidden="true">#</a> 浮点类型</h3><p>浮点数由整数部分和小数部分组成，如：<code>98.34</code></p><p><strong>浮点数存储的不精确性</strong>：</p><p><em><strong>1&gt;</strong></em> 使用浮点数进行计算时，可能会出现小数位数不确定的情况</p><p><em><strong>2&gt;</strong></em> 解决方案：导入模块 <code>decimal</code></p><h3 id="布尔类型" tabindex="-1"><a class="header-anchor" href="#布尔类型" aria-hidden="true">#</a> 布尔类型</h3><p>用来表示真或假的值，<code>True</code> 表示真，<code>False</code> 表示假</p><p><strong>布尔值可以转化为整数</strong>：</p><p>True → 1</p><p>False → 0</p><h3 id="字符串类型" tabindex="-1"><a class="header-anchor" href="#字符串类型" aria-hidden="true">#</a> 字符串类型</h3><p>字符串又被称为不可变的字符序列，可以使用单引号 <code>&#39;&#39;</code>、双引号 <code>&quot;&quot;</code>、三引号 <code>&#39;&#39;&#39;&#39;&#39;&#39;</code> 或 <code>&quot;&quot;&quot;&quot;&quot;&quot;</code> 来定义</p><p><em><strong>注</strong></em>：单引号和双引号定义的字符串必须在一行，三引号定义的字符串可以分布在连续的多行</p><h2 id="数据类型的转换" tabindex="-1"><a class="header-anchor" href="#数据类型的转换" aria-hidden="true">#</a> 数据类型的转换</h2><p>通过数据类型的转换可以将不同数据类型的数据拼接在一起</p><table><thead><tr><th style="text-align:left;"><strong>函数</strong></th><th style="text-align:left;"><strong>作用</strong></th><th style="text-align:left;"><strong>备注</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><code>str()</code></td><td style="text-align:left;">将其他数据类型转成字符串</td><td style="text-align:left;">也可使用引号转换</td></tr><tr><td style="text-align:left;"><code>int()</code></td><td style="text-align:left;">将其他数据类型转成整数</td><td style="text-align:left;">1. 文字和小数类字符串无法转换成整数<br>2. 浮点数转成整数：抹零取整</td></tr><tr><td style="text-align:left;"><code>float()</code></td><td style="text-align:left;">将其他数据类型转成浮点数</td><td style="text-align:left;">1. 文字类无法转成浮点数<br>2. 整数转成浮点数，末尾为 <code>.0</code></td></tr></tbody></table><h2 id="python-中的注释" tabindex="-1"><a class="header-anchor" href="#python-中的注释" aria-hidden="true">#</a> Python 中的注释</h2><p>在代码中对代码的功能进行解释说明的标注性文字，提高代码的可读性</p><p>注释的内容会被 Python 解释器忽略</p><p><strong>通常包括三种类型的注释</strong>：</p><p><em><strong>1&gt;</strong></em> <strong>单行注释</strong>：以 <code>#</code> 开头，直到换行结束</p><p><em><strong>2&gt;</strong></em> <strong>多行注释</strong>：并没有单独的多行注释标记，将一对三引号之间的代码称为多行注释</p><p><em><strong>3&gt;</strong></em> <strong>中文编码声明注释</strong>：在文件开头加上中文声明注释，用以指定源码文件的编码格式</p>`,56),a=[r];function s(c,p){return t(),o("div",null,a)}const h=e(d,[["render",s],["__file","02_变量和数据类型.html.vue"]]);export{h as default};
