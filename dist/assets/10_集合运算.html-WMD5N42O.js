import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,f as e}from"./app-VKLC1A-x.js";const p={},o=e(`<h1 id="集合运算" tabindex="-1"><a class="header-anchor" href="#集合运算" aria-hidden="true">#</a> 集合运算</h1><p>集合运算就是将两个或者多个结果集按照指定的方式组合成为一个新的结果集</p><h2 id="交集" tabindex="-1"><a class="header-anchor" href="#交集" aria-hidden="true">#</a> 交集</h2><p><code>INTERSECT</code>：将上下两个结果集的交集作为新的结果集</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">INTERSECT</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
<span class="token keyword">INTERSECT</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="并集" tabindex="-1"><a class="header-anchor" href="#并集" aria-hidden="true">#</a> 并集</h2><h3 id="union-all" tabindex="-1"><a class="header-anchor" href="#union-all" aria-hidden="true">#</a> UNION ALL</h3><p>将上下两个结果集的并集作为新的结果集，不会去重</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="union" tabindex="-1"><a class="header-anchor" href="#union" aria-hidden="true">#</a> UNION</h3><p>将上下两个结果集的并集作为新的结果集，会自动去重</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">UNION</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="补集" tabindex="-1"><a class="header-anchor" href="#补集" aria-hidden="true">#</a> 补集</h2><p><code>MINUS</code>：第一个结果集减去 第一个结果集与第二个结果集的交集部分之后 在第一个结果集中还剩下的那一部分</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
MINUS
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP T <span class="token keyword">WHERE</span> T<span class="token punctuation">.</span>DEPTNO <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：结果集里的字段名称可以不一样，但是数据类型要一一对应，结果集里的字段数量也要一致</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ENAME <span class="token keyword">AS</span> NNN<span class="token punctuation">,</span> DEPTNO <span class="token keyword">FROM</span> EMP
<span class="token keyword">UNION</span>
<span class="token keyword">SELECT</span> ENAME <span class="token keyword">AS</span> ABC<span class="token punctuation">,</span> DEPTNO <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),t=[o];function c(l,r){return n(),a("div",null,t)}const k=s(p,[["render",c],["__file","10_集合运算.html.vue"]]);export{k as default};
