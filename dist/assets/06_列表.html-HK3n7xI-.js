import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-VKLC1A-x.js";const p={},e=t(`<h1 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>变量可以存储一个元素，而列表是一个“大容器”，可以存储 n 多个元素，程序可以方便地对这些数据进行整体操作</p><p>列表相当于其他语言中的数组</p><p><strong>列表的特点</strong>：</p><p><em><strong>1&gt;</strong></em> 列表元素按顺序<em><strong>有序</strong></em>排列（列表是有序的）</p><p><em><strong>2&gt;</strong></em> 索引映射唯一一个数据</p><p><em><strong>3&gt;</strong></em> 列表<em><strong>可以存储重复数据</strong></em></p><p><em><strong>4&gt;</strong></em> 任意数据类型混存</p><p><em><strong>5&gt;</strong></em> 根据需要动态分配和回收内存</p><h2 id="列表的创建" tabindex="-1"><a class="header-anchor" href="#列表的创建" aria-hidden="true">#</a> 列表的创建</h2><h3 id="普通创建" tabindex="-1"><a class="header-anchor" href="#普通创建" aria-hidden="true">#</a> 普通创建</h3><p>使用中括号 <code>[]</code> 或者函数 <code>list()</code> 创建列表</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>l1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span>
l2 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表生成式" tabindex="-1"><a class="header-anchor" href="#列表生成式" aria-hidden="true">#</a> 列表生成式</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>l1 <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token operator">*</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># [1, 4, 9, 16]</span>
l2 <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># [2, 4, 6, 8]</span>
l3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">3</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># [6, 6, 6, 6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列表的查询" tabindex="-1"><a class="header-anchor" href="#列表的查询" aria-hidden="true">#</a> 列表的查询</h2><h3 id="获取元素的索引" tabindex="-1"><a class="header-anchor" href="#获取元素的索引" aria-hidden="true">#</a> 获取元素的索引</h3><p>使用 <code>index()</code> 函数获取列表中指定元素的索引</p><blockquote><p><em><strong>1&gt;</strong></em> 如果列表中存在 n 个相同元素，只返回相同元素中的第一个元素的索引</p><p><em><strong>2&gt;</strong></em> 如果查询的元素在列表中不存在，则会抛出 <code>ValueError</code></p><p><em><strong>3&gt;</strong></em> 还可以在指定的 <code>start</code> 和 <code>stop</code> 区间内进行查找：<code>index(value, 3, 5)</code></p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;python&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># ValueError: &#39;python&#39; is not in list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取列表中的单个元素" tabindex="-1"><a class="header-anchor" href="#获取列表中的单个元素" aria-hidden="true">#</a> 获取列表中的单个元素</h3><p><em><strong>1&gt;</strong></em> 正向索引从 <code>0</code> 到 <code>n-1</code>，如：<code>lst[0]</code></p><p><em><strong>2&gt;</strong></em> 逆向索引从 <code>-n</code> 到 <code>-1</code>，如：<code>lst[-n]</code></p><p><em><strong>3&gt;</strong></em> 指定索引不存在，抛出 <code>IndexError</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">234</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># hello</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 98</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lst<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># world 234</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># IndexError: list index out of range</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取列表中的多个元素-切片" tabindex="-1"><a class="header-anchor" href="#获取列表中的多个元素-切片" aria-hidden="true">#</a> 获取列表中的多个元素/切片</h3><p>语法结构：<code>列表名[start:stop:step]</code></p><blockquote><p><strong>切片的结果</strong>：原列表片段的拷贝</p><p><strong>切片的范围</strong>：<code>[start,stop)</code>，不包含 <code>stop</code></p><p><code>step</code> 步长默认为 <code>1</code>，简写为 <code>[start:stop]</code></p><p><code>step</code> 为正：从 <code>start</code> 开始往后计算切片</p><p><code>[:stop:step]</code>：切片的第一个元素默认是列表的第一个元素</p><p><code>[start::step]</code>：切片的最后一个元素默认是列表的最后一个元素</p><p><code>step</code> 为负：从 <code>start</code> 开始往前计算切片</p><p><code>[:stop:step]</code>：切片的第一个元素默认是列表的最后一个元素</p><p><code>[start::step]</code>：切片的最后一个元素默认是列表的第一个元素</p></blockquote><h3 id="列表元素的判断" tabindex="-1"><a class="header-anchor" href="#列表元素的判断" aria-hidden="true">#</a> 列表元素的判断</h3><p>判断指定元素在列表中是否存在</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span> <span class="token keyword">in</span> <span class="token string">&#39;python&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;k&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token string">&#39;python&#39;</span><span class="token punctuation">)</span>
lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;python&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token keyword">in</span> lst<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token keyword">not</span> <span class="token keyword">in</span> lst<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表元素的遍历" tabindex="-1"><a class="header-anchor" href="#列表元素的遍历" aria-hidden="true">#</a> 列表元素的遍历</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;python&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> lst<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列表的增删改" tabindex="-1"><a class="header-anchor" href="#列表的增删改" aria-hidden="true">#</a> 列表的增删改</h2><h3 id="增加列表元素" tabindex="-1"><a class="header-anchor" href="#增加列表元素" aria-hidden="true">#</a> 增加列表元素</h3><table><thead><tr><th style="text-align:left;"><strong>方法</strong></th><th style="text-align:left;"><strong>操作描述</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><code>append()</code></td><td style="text-align:left;">在列表的末尾添加一个元素</td></tr><tr><td style="text-align:left;"><code>extend()</code></td><td style="text-align:left;">在列表的末尾添加至少一个元素</td></tr><tr><td style="text-align:left;"><code>insert()</code></td><td style="text-align:left;">在列表的指定索引位置前添加一个元素</td></tr><tr><td style="text-align:left;">切片</td><td style="text-align:left;">在列表的任意位置添加至少一个元素（覆盖式添加，添加并替换）</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span>
lst<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>注</strong></em>：对数字和字符串使用 <code>+=</code>，相当于先相加再赋值，而对列表使用 <code>+=</code>，相当于调用了 <code>extend()</code> 方法，如果在函数内部使用，就会改变外面列表的值</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>l1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
l2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
l1 <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token string">&#39;xyz&#39;</span><span class="token punctuation">]</span>
l2<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;xyz&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l1<span class="token punctuation">)</span>  <span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;xyz&#39;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l2<span class="token punctuation">)</span>  <span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;xyz&#39;]</span>

l3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
l4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
l3 <span class="token operator">+=</span> <span class="token string">&#39;xyz&#39;</span>
l4<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token string">&#39;xyz&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l3<span class="token punctuation">)</span>  <span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l4<span class="token punctuation">)</span>  <span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除列表元素" tabindex="-1"><a class="header-anchor" href="#删除列表元素" aria-hidden="true">#</a> 删除列表元素</h3><table><thead><tr><th style="text-align:left;"><strong>方法</strong></th><th style="text-align:left;"><strong>操作描述</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><code>remove()</code></td><td style="text-align:left;">一次删除一个元素<br>重复元素只删除第一个<br>元素不存在抛出 ValueError</td></tr><tr><td style="text-align:left;"><code>pop()</code></td><td style="text-align:left;">删除一个指定索引位置上的元素<br>指定索引不存在抛出 IndexError<br>不指定索引，删除列表中最后一个元素</td></tr><tr><td style="text-align:left;">切片</td><td style="text-align:left;">一次删除至少一个元素，产生新的列表对象，原列表不变</td></tr><tr><td style="text-align:left;"><code>clear()</code></td><td style="text-align:left;">清空列表</td></tr><tr><td style="text-align:left;"><code>del</code></td><td style="text-align:left;">删除列表，本质上是将一个变量从内存中删除</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">]</span>
lst<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span>  <span class="token comment"># 删除值为 33 的元素</span>
lst<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>      <span class="token comment"># 删除索引为 1 的元素</span>
lst<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment"># 不指定索引，删除最后一个元素</span>
lst2 <span class="token operator">=</span> lst<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment"># 切片产生新的列表对象，原列表不变</span>
lst<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment"># 不产生新的列表对象，只是删除原列表中的内容</span>
lst<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 清空列表</span>
<span class="token keyword">del</span> lst         <span class="token comment"># 删除列表</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改列表元素" tabindex="-1"><a class="header-anchor" href="#修改列表元素" aria-hidden="true">#</a> 修改列表元素</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
lst<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">33</span>  <span class="token comment"># 修改指定索引位置的元素</span>
lst<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">]</span>  <span class="token comment"># 使用切片修改多个值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列表的排序" tabindex="-1"><a class="header-anchor" href="#列表的排序" aria-hidden="true">#</a> 列表的排序</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 使用 sort() 函数，不会产生新的列表对象</span>
lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
lst<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 默认升序</span>
lst<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>   <span class="token comment"># 降序</span>
lst<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># 升序</span>

<span class="token comment"># 使用 sorted() 函数，会产生新的列表对象</span>
lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">]</span>
lst <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>  <span class="token comment"># 默认升序</span>
lst <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>lst<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>   <span class="token comment"># 降序</span>
lst <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>lst<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># 升序</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列表元素的个数" tabindex="-1"><a class="header-anchor" href="#列表元素的个数" aria-hidden="true">#</a> 列表元素的个数</h2><p><code>len(lst)</code>：用于统计列表中元素的总数</p><p><code>lst.count(value)</code>：用于统计元素 <code>value</code> 出现的次数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 7</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","06_列表.html.vue"]]);export{k as default};
