import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as p}from"./app-VKLC1A-x.js";const t={},e=p(`<h1 id="操作鼠标和键盘" tabindex="-1"><a class="header-anchor" href="#操作鼠标和键盘" aria-hidden="true">#</a> 操作鼠标和键盘</h1><h2 id="pyautogui模块的使用" tabindex="-1"><a class="header-anchor" href="#pyautogui模块的使用" aria-hidden="true">#</a> pyautogui模块的使用</h2><p>安装Python包：<code>pip install pyautogui</code></p><ul><li><p><strong>获取屏幕尺寸和鼠标位置坐标</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">print</span><span class="token punctuation">(</span>pyautogui<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 获取屏幕尺寸 -&gt; Size(width=1920, height=1080)</span>
width<span class="token punctuation">,</span> height <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>  <span class="token comment"># 1920 1080</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pyautogui<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 获取鼠标位置坐标 -&gt; Point(x=1050, y=432)</span>
a<span class="token punctuation">,</span> b <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>  <span class="token comment"># 1050 432</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>移动鼠标</strong></p><p>使用<code>moveTo()</code>方法实现在绝对位置移动</p><p>使用<code>moveRel()</code>方法让鼠标实现相对于当前位置进行移动</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 不设置duration参数，没有间隔，快速移动</span>
pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token comment"># 设置duration参数，每次移动间隔duration设置的时长，单位秒</span>
pyautogui<span class="token punctuation">.</span>moveTo<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>

<span class="token comment"># 第一个数值表示水平方向，正值向右移动，负值向左移动</span>
<span class="token comment"># 第二个数值表示垂直方向，正值向下移动，负值向上移动</span>
pyautogui<span class="token punctuation">.</span>moveRel<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>鼠标点击</strong></p><p><code>pyautogui.click()</code> = <code>pyautogui.mouseDown()</code> + <code>pyautogui.mouseUp()</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 在当前位置点击</span>
pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 在指定位置点击</span>
pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 在指定位置点击左键，默认也是左键</span>
pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 在指定位置点击右键</span>
pyautogui<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> button<span class="token operator">=</span><span class="token string">&#39;middle&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 在指定位置点击中键，即滚轮</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>鼠标拖动</strong></p><p><code>dragTo()</code>：在绝对位置拖动</p><p><code>dragRel()</code>：相对于当前位置进行拖动</p><p>两者都需要设置一下<code>duration</code>，否则无法实现效果</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pyautogui<span class="token punctuation">.</span>dragTo<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>  <span class="token comment"># 在绝对位置拖动</span>
pyautogui<span class="token punctuation">.</span>dragRel<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> duration<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>  <span class="token comment"># 相对于当前位置进行拖动</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>鼠标滚动</strong></p><p><code>scroll()</code>：正值表示向上滚动，负值表示向下滚动</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>截图和颜色匹配</strong></p><p><code>screenshot()</code>：截取当前整个屏幕，返回一个图像对象</p><p><code>pixelMatchesColor()</code>：判断对应点的颜色是否和给定的颜色相同，返回<code>True</code>或<code>False</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>img <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 获取截图上对应像素点的颜色 -&gt; (60, 63, 65)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>pyautogui<span class="token punctuation">.</span>pixelMatchesColor<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pyautogui<span class="token punctuation">.</span>pixelMatchesColor<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>图像识别</strong></p><p><code>locateOnScreen()</code>：判断图像是否在当前屏幕上，存在返回左上角坐标和图像的宽高，不存在返回<code>None</code></p><p><code>locateAllOnScreen()</code>：识别图像时，当前屏幕上可能不止一个图像，此方法可以返回所有存在的图像的位置和宽高，返回的是一个迭代器</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>settings_location <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>locateOnScreen<span class="token punctuation">(</span><span class="token string">&#39;settings_icon.png&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>settings_location<span class="token punctuation">)</span>  <span class="token comment"># Box(left=8, top=939, width=59, height=56)</span>

<span class="token comment"># 识别到图像存在后，获取图像中心点当前所在的坐标并返回</span>
settings_center <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>center<span class="token punctuation">(</span>settings_location<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>settings_center<span class="token punctuation">)</span>  <span class="token comment"># Point(x=37, y=967)</span>

result <span class="token operator">=</span> pyautogui<span class="token punctuation">.</span>locateAllOnScreen<span class="token punctuation">(</span><span class="token string">&#39;settings_icon.png&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># [Box(left=8, top=939, width=59, height=56)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>键盘输出</strong></p><p><code>typewrite()</code>：输出字符串，可以通过<code>interval</code>参数设置输出间隔，输出位置为光标所在位置，并且无法输出中文和中文字符，同时输出内容也受输入法影响</p><p><code>press()</code>：单个按键的控制</p><p><code>keyDown()</code>：按下</p><p><code>keyUp()</code>：松开</p><p><code>hotkey()</code>：使用快捷键进行输出</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pyautogui<span class="token punctuation">.</span>typewrite<span class="token punctuation">(</span><span class="token string">&#39;Hello world!\\nleft\\n&#39;</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">)</span>
<span class="token comment"># 输出内容为列表时，其中的“left”、“right”表示键盘上的向左、向右键</span>
pyautogui<span class="token punctuation">.</span>typewrite<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;right&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Y&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span>

<span class="token comment"># 获取按键名</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pyautogui<span class="token punctuation">.</span>KEYBOARD_KEYS<span class="token punctuation">)</span>

<span class="token comment"># 组合按键输出</span>
pyautogui<span class="token punctuation">.</span>keyDown<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 按下“shift”再按“2”，所以实际输出为“@”</span>
pyautogui<span class="token punctuation">.</span>keyUp<span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 快捷键输出</span>
pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">)</span>
pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>输出中文字符</strong></p><p>借助<code>pyperclip</code>模块中的<code>copy()</code>方法将需要输出的字符复制到剪切板上，然后再通过<code>pyautogui.hotkey()</code>方法使用快捷键将内容粘贴出来</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pyautogui
<span class="token keyword">import</span> pyperclip
pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token string">&#39;这是中文字符！&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 将内容复制到剪切板</span>
pyautogui<span class="token punctuation">.</span>hotkey<span class="token punctuation">(</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 使用快捷键将内容粘贴出来</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>回顾总结</strong></p><p><code>pyautogui.PAUSE = num</code>：设置每次操作时都暂停一下，单位秒</p><p>鼠标移动：<code>moveTo(x, y)</code>，<code>moveRel(xOffset, yOffset)</code></p><p>鼠标拖动：<code>dragTo(x, y)</code>，<code>dragRel(xOffset, yOffset)</code></p><p>鼠标点击：<code>click(x, y, button)</code>，<code>rightClick()</code>，<code>middleClick()</code>，<code>doubleClick()</code></p><p>鼠标按下：<code>mouseDown(x, y, button)</code>，<code>mouseUp(x, y, button)</code></p><p>鼠标滚动：<code>scroll(unites)</code></p><p>键盘输出：<code>typewrite(message)</code>，<code>typewrite([value1, value2, ...])</code></p><p>键盘点击：<code>press(key)</code>，<code>keyDown(key)</code>，<code>keyUp(key)</code></p><p>快捷键：<code>hotkey(key1, key2, ...)</code>，<code>screenshot()</code></p></li></ul>`,4),o=[e];function c(i,u){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","08_操作鼠标和键盘.html.vue"]]);export{k as default};
