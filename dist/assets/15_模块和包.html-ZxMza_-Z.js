import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as e}from"./app-VKLC1A-x.js";const t={},p=e(`<h1 id="模块和包" tabindex="-1"><a class="header-anchor" href="#模块和包" aria-hidden="true">#</a> 模块和包</h1><h2 id="模块-module" tabindex="-1"><a class="header-anchor" href="#模块-module" aria-hidden="true">#</a> 模块 module</h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h3><p><strong>函数与模块的关系</strong>：一个模块中可以包含 N 多个函数</p><p>在 Python 中一个扩展名为 <code>.py</code> 的文件就是一个模块</p><p>模块名也是标识符，所以在给 <code>.py</code> 文件命名时不要使用数字开头，方便后期调用</p><p>文件夹 <code>__pycache__</code> 中的 <code>.pyc</code> 文件是 Python 解释器将被调用过的模块转换为二进制字节码后新创建的文件，目的是为了优化启动速度，方便下次使用时快速打开</p><p><strong>使用模块的好处</strong>：</p><p><em><strong>1&gt;</strong></em> 方便其它程序和脚本的导入并使用</p><p><em><strong>2&gt;</strong></em> 避免函数名和变量名冲突</p><p><em><strong>3&gt;</strong></em> 提高代码的可维护性</p><p><em><strong>4&gt;</strong></em> 提高代码的可重用性</p><h3 id="模块的导入和使用" tabindex="-1"><a class="header-anchor" href="#模块的导入和使用" aria-hidden="true">#</a> 模块的导入和使用</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> math                <span class="token comment"># 导入方式一</span>
<span class="token keyword">import</span> math <span class="token keyword">as</span> ma          <span class="token comment"># 导入方式二，使用 as 取别名</span>
<span class="token keyword">from</span> math <span class="token keyword">import</span> <span class="token builtin">pow</span>       <span class="token comment"># 导入方式三</span>
<span class="token keyword">from</span> math <span class="token keyword">import</span> <span class="token builtin">pow</span> <span class="token keyword">as</span> p  <span class="token comment"># 导入方式四</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 使用方式一</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ma<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 使用方式二，直接使用别名进行调用</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 使用方式三</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># 使用方式四</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="以主程序运行" tabindex="-1"><a class="header-anchor" href="#以主程序运行" aria-hidden="true">#</a> 以主程序运行</h2><p>在每个模块的定义中都包括一个记录模块名称的变量 <code>__name__</code>，程序可以检查该变量，以确定它们在哪个模块中执行。如果一个模块不是被导入到其它程序中执行，那么它可能在解释器的顶级模块中执行。顶级模块的 <code>__name__</code> 变量的值为 <code>__main__</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="包-package" tabindex="-1"><a class="header-anchor" href="#包-package" aria-hidden="true">#</a> 包 package</h2><h3 id="介绍-1" tabindex="-1"><a class="header-anchor" href="#介绍-1" aria-hidden="true">#</a> 介绍</h3><p>包是一个分层次的目录结构，它将一组功能相近的模块组织在一个目录下</p><p><strong>包的作用</strong>：</p><p><em><strong>1&gt;</strong></em> 代码规范</p><p><em><strong>2&gt;</strong></em> 避免模块名称冲突</p><p><strong>包与目录的区别</strong>：</p><p><em><strong>1&gt;</strong></em> 包含 <code>__init__.py</code> 文件的目录称为包</p><p><em><strong>2&gt;</strong></em> 目录里通常不包含 <code>__init__.py</code> 文件</p><h3 id="包的导入" tabindex="-1"><a class="header-anchor" href="#包的导入" aria-hidden="true">#</a> 包的导入</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 方式一：使用 import 方式进行导入时，只能导入包或模块</span>
<span class="token keyword">import</span> package1
<span class="token keyword">import</span> package1<span class="token punctuation">.</span>module1
<span class="token keyword">import</span> module2

<span class="token comment"># 方式二：使用 from-import 方式可以导入包、模块、函数、变量等</span>
<span class="token keyword">from</span> package1 <span class="token keyword">import</span> module1
<span class="token keyword">from</span> package1<span class="token punctuation">.</span>module1 <span class="token keyword">import</span> a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用的模块和包" tabindex="-1"><a class="header-anchor" href="#常用的模块和包" aria-hidden="true">#</a> 常用的模块和包</h2><table><thead><tr><th style="text-align:left;"><strong>模块名</strong></th><th style="text-align:left;"><strong>描述</strong></th></tr></thead><tbody><tr><td style="text-align:left;">sys</td><td style="text-align:left;">与 Python 解释器及其环境操作相关的标准库</td></tr><tr><td style="text-align:left;">time</td><td style="text-align:left;">提供与时间相关的各种函数的标准库</td></tr><tr><td style="text-align:left;">os</td><td style="text-align:left;">提供了访问操作系统服务功能的标准库</td></tr><tr><td style="text-align:left;">calendar</td><td style="text-align:left;">提供与日期相关的各种函数的标准库</td></tr><tr><td style="text-align:left;">urllib</td><td style="text-align:left;">用于读取来自网上（服务器）的数据标准库</td></tr><tr><td style="text-align:left;">json</td><td style="text-align:left;">用于使用 JSON 序列化和反序列化对象</td></tr><tr><td style="text-align:left;">re</td><td style="text-align:left;">用于在字符串中执行正则表达式匹配和替换</td></tr><tr><td style="text-align:left;">math</td><td style="text-align:left;">提供标准算术运算函数的标准库</td></tr><tr><td style="text-align:left;">decimal</td><td style="text-align:left;">用于进行精确控制运算精度、有效数位和四舍五入操作的十进制运算</td></tr><tr><td style="text-align:left;">logging</td><td style="text-align:left;">提供了灵活的记录事件、错误、警告和调试信息等日志信息的功能</td></tr></tbody></table><h2 id="第三方模块的安装和使用" tabindex="-1"><a class="header-anchor" href="#第三方模块的安装和使用" aria-hidden="true">#</a> 第三方模块的安装和使用</h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p><em><strong>1&gt;</strong></em> 打开终端窗口</p><p><em><strong>2&gt;</strong></em> 运行 <code>pip install 模块名</code> 命令，等待安装即可</p><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> 模块名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="卸载" tabindex="-1"><a class="header-anchor" href="#卸载" aria-hidden="true">#</a> 卸载</h3><p><em><strong>1&gt;</strong></em> 打开终端窗口</p><p><em><strong>2&gt;</strong></em> 运行 <code>pip uninstall 模块名</code> 命令，等待卸载即可</p>`,39),o=[p];function l(d,i){return a(),s("div",null,o)}const m=n(t,[["render",l],["__file","15_模块和包.html.vue"]]);export{m as default};
