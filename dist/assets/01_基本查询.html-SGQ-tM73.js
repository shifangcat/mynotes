import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,f as e}from"./app-VKLC1A-x.js";const p={},o=e(`<h1 id="基本查询" tabindex="-1"><a class="header-anchor" href="#基本查询" aria-hidden="true">#</a> 基本查询</h1><p>SQL语句中，字符串是严格区分大小写的，其他的关键字、表名、字段名、别名是不区分大小写的</p><p>Oracle教程：https://www.yiibai.com/oracle</p><h2 id="基础命令" tabindex="-1"><a class="header-anchor" href="#基础命令" aria-hidden="true">#</a> 基础命令</h2><h3 id="基础查询" tabindex="-1"><a class="header-anchor" href="#基础查询" aria-hidden="true">#</a> 基础查询</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询所有数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>

<span class="token comment">-- 查询部分字段</span>
<span class="token keyword">SELECT</span> EMPNO<span class="token punctuation">,</span> HIREDATE<span class="token punctuation">,</span> DEPTNO <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="取别名" tabindex="-1"><a class="header-anchor" href="#取别名" aria-hidden="true">#</a> 取别名</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 给字段取别名，字段名+AS+别名，AS可以省略</span>
<span class="token keyword">SELECT</span> EMPNO 员工姓名<span class="token punctuation">,</span> SAL 工资 <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>

<span class="token comment">-- 别名不能使用单引号，也不能以数字开头，想要以数字开头可以使用双引号</span>
<span class="token keyword">SELECT</span> EMPNO <span class="token string">&quot;1员工姓名&quot;</span> <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>

<span class="token comment">-- 表的别名，表名+空格+别名，不能加AS</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP E<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="万能表-伪表dual" tabindex="-1"><a class="header-anchor" href="#万能表-伪表dual" aria-hidden="true">#</a> 万能表/伪表DUAL</h3><p>DUAL是一张虚拟表，只有一行一列，用来构成SELECT的语法规则</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oracle查询系统当前时间" tabindex="-1"><a class="header-anchor" href="#oracle查询系统当前时间" aria-hidden="true">#</a> ORACLE查询系统当前时间</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>SYSDATE  <span class="token comment">-- SYSTEM DATE，系统日期，年/月/日 星期 时:分:秒，2022/8/8 星期一 18:47:57</span>
<span class="token keyword">SELECT</span> SYSDATE <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><p>ORACLE数据库的三种常用数据类型：</p><ul><li><p><strong>字符串类型</strong></p><p><code>VARCHAR2(X)</code> ，加单引号表示字符型，<code>X</code>表示字符串可存储的最大长度</p></li><li><p><strong>数字类型</strong></p><p><code>NUMBER(X, Y)</code>，直接打出来，数字的最大长度为<code>X</code>，包含<code>Y</code>位小数位</p><p><code>NUMBER(X)</code>，数字的最大长度为<code>X</code>位</p></li><li><p><strong>日期类型</strong></p><p><code>DATE</code>，年/月/日 时:分:秒，不能直接表示，需要使用<code>TO_DATE()</code>函数</p></li></ul><p>数据库中每一个字段有且只有一种数据类型</p><p>条件判断时，比较符两边的数据类型要保持一致</p><h2 id="数据类型的转换" tabindex="-1"><a class="header-anchor" href="#数据类型的转换" aria-hidden="true">#</a> 数据类型的转换</h2><h3 id="日期→字符串" tabindex="-1"><a class="header-anchor" href="#日期→字符串" aria-hidden="true">#</a> 日期→字符串</h3><p><code>TO_CHAR()</code>函数可以将日期字段转换成字符串类型</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;YYYYMMDD&#39;</span><span class="token punctuation">)</span> 年月日<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;YYYY-MM-DD&#39;</span><span class="token punctuation">)</span> 年月日<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;YYYY&#39;</span><span class="token punctuation">)</span> 年<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;YYYYMM&#39;</span><span class="token punctuation">)</span> 年月<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;DD&#39;</span><span class="token punctuation">)</span> 日<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;MM/DD&#39;</span><span class="token punctuation">)</span>  月日<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;HH24&#39;</span><span class="token punctuation">)</span> 时<span class="token number">24</span><span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;HH&#39;</span><span class="token punctuation">)</span> 时<span class="token number">12</span><span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;MM-MI&#39;</span><span class="token punctuation">)</span> 月分<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;YYYY/MM/DD HH24:MI:SS&#39;</span><span class="token punctuation">)</span> 年月日时分秒<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;W&#39;</span><span class="token punctuation">)</span> 本月第几周<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;DAY&#39;</span><span class="token punctuation">)</span> 星期<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;Q&#39;</span><span class="token punctuation">)</span> 季度<span class="token punctuation">,</span>
TO_CHAR<span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span> 一周的第几天
<span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>

<span class="token comment">-- TO_DATE()括号里面年月日必须完整（包含年月日）</span>
<span class="token comment">-- TO_CHAR()括号里面可以只取年月日时分秒中的一个，或者某几个，或者全部取出</span>
<span class="token comment">-- YYYY：年    MM：月    DD：日    HH：12时    HH24：24时    MI：分    SS：秒</span>
<span class="token comment">-- W：本月第几周    DAY：星期    Q：季度    D：一周的第几天（从周日开始）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串→日期" tabindex="-1"><a class="header-anchor" href="#字符串→日期" aria-hidden="true">#</a> 字符串→日期</h3><p><code>TO_DATE()</code>函数可以将字符串转换为日期</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;20180101&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;YYYYMMDD&#39;</span><span class="token punctuation">)</span>
TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;2018-01-01&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;YYYY-MM-DD&#39;</span><span class="token punctuation">)</span>
TO_DATE<span class="token punctuation">(</span><span class="token string">&#39;2018/01/01&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;YYYY/MM/DD&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串→数字" tabindex="-1"><a class="header-anchor" href="#字符串→数字" aria-hidden="true">#</a> 字符串→数字</h3><p><code>TO_NUMBER()</code>函数可以将纯数字的字符串转换成数字类型</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> TO_NUMBER<span class="token punctuation">(</span><span class="token string">&#39;1234&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>

<span class="token comment">-- 引号里面全是数字时，数据库可以做隐式转换</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> SAL<span class="token operator">=</span><span class="token string">&#39;3000&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>日期 → 字符串类型 ：<code>TO_CHAR(日期字段,输出格式)</code>，<code>&#39;YYYYMMDD&#39;/&#39;YYYY&#39;</code></p><p>字符串类型 → 日期 ：<code>TO_DATE(字符串,输出格式)</code>，<code>&#39;YYYYMMDD&#39;/&#39;YYYY-MM-DD&#39;</code></p><p>字符串 → 数字类型 ：<code>TO_NUMBER(纯数字字符串)</code>，可以不用，做隐式转换</p><h2 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询" aria-hidden="true">#</a> 条件查询</h2><p>使用<code>WHERE</code>进行条件查询</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> ENAME<span class="token operator">=</span><span class="token string">&#39;SCOTT&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="and和or" tabindex="-1"><a class="header-anchor" href="#and和or" aria-hidden="true">#</a> AND和OR</h3><p><code>AND</code>：和、与、且</p><p><code>OR</code>：或者</p><p><em><strong>注</strong></em>：AND的执行优先级比OR要高</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询20号部门的经理</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> DEPTNO<span class="token operator">=</span><span class="token number">20</span> <span class="token operator">AND</span> JOB<span class="token operator">=</span><span class="token string">&#39;MANAGER&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询部门编号为10、20的所有员工的信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> DEPTNO<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">OR</span> DEPTNO<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询薪资大于2000，或者奖金大于300，并且姓名等于&#39;WARD&#39;的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP E <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>E<span class="token punctuation">.</span>SAL<span class="token operator">&gt;</span><span class="token number">2000</span> <span class="token operator">OR</span> E<span class="token punctuation">.</span>COMM<span class="token operator">&gt;</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token operator">AND</span> E<span class="token punctuation">.</span>ENAME<span class="token operator">=</span><span class="token string">&#39;WARD&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="范围查询" tabindex="-1"><a class="header-anchor" href="#范围查询" aria-hidden="true">#</a> 范围查询</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- BETWEEN X AND Y，在...之间，相当于 &gt;=X AND &lt;=Y，两端均包含[X, Y]，X要小于Y</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> SAL<span class="token operator">&gt;=</span><span class="token number">1000</span> <span class="token operator">AND</span> SAL<span class="token operator">&lt;=</span><span class="token number">2000</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> SAL <span class="token operator">BETWEEN</span> <span class="token number">1000</span> <span class="token operator">AND</span> <span class="token number">2000</span><span class="token punctuation">;</span>

<span class="token comment">-- IN (X, Y, ...)，在...里面，相当于 =X OR =Y</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> JOB<span class="token operator">=</span><span class="token string">&#39;MANAGER&#39;</span> <span class="token operator">OR</span> JOB<span class="token operator">=</span><span class="token string">&#39;CLERK&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> JOB <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;MANAGER&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CLERK&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="反向区间" tabindex="-1"><a class="header-anchor" href="#反向区间" aria-hidden="true">#</a> 反向区间</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 反向区间，在关键字前面加上 NOT 就可以了</span>
<span class="token comment">-- 查询薪资不在1000-2000元的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> SAL <span class="token operator">NOT</span> <span class="token operator">BETWEEN</span> <span class="token number">1000</span> <span class="token operator">AND</span> <span class="token number">2000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模糊查询" tabindex="-1"><a class="header-anchor" href="#模糊查询" aria-hidden="true">#</a> 模糊查询</h3><p><code>LIKE</code>，像...，有以下两个通配符：</p><p><code>%</code>：百分号，表示0位或多位字符</p><p><code>_</code>：下划线，表示一位字符</p><p><code>NOT LIKE</code>，不像...</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询EMP表中姓名中包含字符S的员工的信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> ENAME <span class="token operator">LIKE</span> <span class="token string">&#39;%S%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询姓名以S开关的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> ENAME <span class="token operator">LIKE</span> <span class="token string">&#39;S%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 找出名字是5个字的员工</span>
<span class="token keyword">SELECT</span> ENAME <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> ENAME <span class="token operator">LIKE</span> <span class="token string">&#39;_____&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 注：LENGTH()函数是数据库自带的函数，可以获取括号内字段的长度</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> LENGTH<span class="token punctuation">(</span>ENAME<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">5</span> <span class="token operator">AND</span> ENAME <span class="token operator">LIKE</span> <span class="token string">&#39;_C%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="空值-null" tabindex="-1"><a class="header-anchor" href="#空值-null" aria-hidden="true">#</a> 空值：NULL</h2><h3 id="空值的过滤" tabindex="-1"><a class="header-anchor" href="#空值的过滤" aria-hidden="true">#</a> 空值的过滤</h3><p>空值的过滤需要用<code>IS NULL</code>来判断</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 筛选奖金为空(没有奖金)的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> COMM <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>

<span class="token comment">-- 筛选奖金不为空(有奖金)的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> COMM <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="空值不做比较" tabindex="-1"><a class="header-anchor" href="#空值不做比较" aria-hidden="true">#</a> 空值不做比较</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> SAL <span class="token operator">&gt;</span> COMM<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> SAL <span class="token operator">&lt;</span> COMM<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="空值的运算" tabindex="-1"><a class="header-anchor" href="#空值的运算" aria-hidden="true">#</a> 空值的运算</h3><p>空值跟任何值进行加减乘除得到的都是空(NULL)</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token boolean">NULL</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="空值的转换" tabindex="-1"><a class="header-anchor" href="#空值的转换" aria-hidden="true">#</a> 空值的转换</h3><p><code>NVL(X, Y)</code>：判断<code>X</code>，如果<code>X</code>不为空，返回<code>X</code>；否则返回<code>Y</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ENAME<span class="token punctuation">,</span> SAL<span class="token punctuation">,</span> COMM<span class="token punctuation">,</span> NVL<span class="token punctuation">(</span>COMM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> COMM<span class="token punctuation">,</span> SAL <span class="token operator">+</span> NVL<span class="token punctuation">(</span>COMM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> SC <span class="token keyword">FROM</span> EMP<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h2><p><code>ORDER BY 字段名 排序方式</code>（升序/ASC、降序/DESC）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询员工表的员工姓名、员工薪资、按照薪资倒序排序</span>
<span class="token keyword">SELECT</span> ENAME<span class="token punctuation">,</span> SAL <span class="token keyword">FROM</span> EMP <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> SAL <span class="token keyword">DESC</span><span class="token punctuation">;</span>

<span class="token comment">-- 默认是升序</span>
<span class="token keyword">SELECT</span> ENAME<span class="token punctuation">,</span> SAL <span class="token keyword">FROM</span> EMP <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> SAL<span class="token punctuation">;</span>

<span class="token comment">-- 多字段排序，需要加上逗号分开</span>
<span class="token comment">-- 查询员工的姓名、薪资、入职时间、按照薪资的从高到底以及入职时间从早到晚排序</span>
<span class="token keyword">SELECT</span> ENAME<span class="token punctuation">,</span> SAL<span class="token punctuation">,</span> HIREDATE <span class="token keyword">FROM</span> EMP <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> SAL <span class="token keyword">DESC</span><span class="token punctuation">,</span> HIREDATE<span class="token punctuation">;</span>

<span class="token comment">-- 空值排序永远在最大</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> COMM<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> COMM <span class="token keyword">DESC</span><span class="token punctuation">;</span>

<span class="token comment">-- 字符串排序按照英文首字母来排</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> EMP <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ENAME<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sql语句执行顺序" tabindex="-1"><a class="header-anchor" href="#sql语句执行顺序" aria-hidden="true">#</a> SQL语句执行顺序</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SELECT -- 3</p><p>FROM -- 1</p><p>WHERE -- 2</p><p>ORDER BY -- 4</p><p>别名一般用在<code>ORDER BY</code>之后</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 找出年收入高于2万的员工信息(年收入 = (薪资+奖金) * 12)，并且输出员工姓名、员工薪资、奖金、年收入，按照年收入的倒序排序</span>
<span class="token keyword">SELECT</span> ENAME 姓名<span class="token punctuation">,</span> SAL 薪资<span class="token punctuation">,</span> NVL<span class="token punctuation">(</span>COMM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> 奖金<span class="token punctuation">,</span> <span class="token punctuation">(</span>SAL <span class="token operator">+</span> NVL<span class="token punctuation">(</span>COMM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">12</span> 年收入 <span class="token keyword">FROM</span> EMP <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>SAL <span class="token operator">+</span> NVL<span class="token punctuation">(</span>COMM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">12</span> <span class="token operator">&gt;</span> <span class="token number">20000</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 年收入 <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,73),t=[o];function c(l,i){return n(),a("div",null,t)}const u=s(p,[["render",c],["__file","01_基本查询.html.vue"]]);export{u as default};
