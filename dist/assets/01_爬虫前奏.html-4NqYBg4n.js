import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as n,c as r,b as e,d as o,e as s,f as c}from"./app-VKLC1A-x.js";const a={},i=e("h1",{id:"爬虫前奏",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#爬虫前奏","aria-hidden":"true"},"#"),o(" 爬虫前奏")],-1),l=e("h2",{id:"爬虫介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#爬虫介绍","aria-hidden":"true"},"#"),o(" 爬虫介绍")],-1),h=e("p",null,[e("strong",null,"网络爬虫")],-1),g=e("p",null,[e("em",null,[e("strong",null,"定义")]),o("：通俗理解：爬虫是一个模拟人类请求网站行为的程序。可以自动请求网页、并数据抓取下来，然后使用一定的规则提取有价值的数据")],-1),m={href:"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/5162711?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},u=c("<li><p><strong>通用爬虫和聚集爬虫</strong></p><p><em><strong>通用爬虫</strong></em>：通用爬虫是搜索引擎抓取系统（百度、谷歌、搜狗等）的重要组成部分。主要是将互联网上的网页下载到本地，形成一个互联网内容的镜像备份</p><p><em><strong>聚焦爬虫</strong></em>：是面向特定需求的一种网络爬虫程序，他与通用爬虫的区别在于：聚焦爬虫在实施网页抓取的时候会对内容进行筛选和处理，尽量保证只抓取与需求相关的网页信息</p></li><li><p><strong>准备工具</strong></p><p>Python3.6开发环境</p><p>虚拟环境</p></li>",2),_=c(`<h2 id="http协议" tabindex="-1"><a class="header-anchor" href="#http协议" aria-hidden="true">#</a> HTTP协议</h2><ul><li><p><strong>HTTP和HTTPS协议</strong></p><p><em><strong>HTTP协议</strong></em>：全称是HyperText Transfer Protocol，意思是超文本传输协议，是一种发布和接收<code>HTML</code>页面的方法，服务器端口号是<code>80</code>端口</p><p><em><strong>HTTPS协议</strong></em>：<code>HTTP</code>协议的加密版本，在<code>HTTP</code>下加入了<code>SSL</code>层，服务器端口号是<code>443</code>端口</p></li><li><p><strong>URL详解</strong></p><p>URL是Uniform Resource Locator的简写，意思是统一资源定位符</p><p>一个URL由以下几部分<em><strong>组成</strong></em>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scheme://host:port/path/?query-string=xxx#anchor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>scheme</code>：代表的是访问的协议，一般为<code>http</code>或者<code>https</code>以及<code>ftp</code>等</p><p><code>host</code>：主机名，域名。如：www.baidu.com</p><p><code>port</code>：端口号。访问网站时，浏览器默认使用<code>80</code>端口</p><p><code>path</code>：查找路径。如：www.jianshu.com/trending/now，后面的<code>trending/now</code>就是<code>path</code></p><p><code>query-string</code>：查询字符串。如：www.baidu.com/s?wd=python，后面的<code>wd=python</code>就是查询字符串</p><p><code>anchor</code>：锚点。后台一般不用管，前端用来做页面定位的</p><p>在浏览器中请求<code>url</code>，浏览器会对这个<code>url</code>进行编码。除英文字母、数字和部分符号外，其他的全部使用百分号+十六进制码值进行编码</p></li><li><p><strong>常用的请求方法</strong></p><p>在<code>HTTP</code>协议中，定义了八种请求方法，其中<code>get</code>和<code>post</code>是最常用的请求方法</p><p><em><strong>get请求</strong></em>：一般情况下，只从服务器获取数据，并不会对服务器资源产生影响的时候使用<code>get</code>请求</p><p><em><strong>post请求</strong></em>：向服务器发送数据（登录）、上传文件等，会对服务器资源产生影响的时候使用<code>post</code>请求</p><p><em><strong>注</strong></em>：以上是在网站开发中常用的两种方法，并且一般情况下都会遵循使用的原则。但是有的网站和服务器为了做反爬虫机制，会不按常理出牌，有可能一个应该使用<code>get</code>方法的请求会改成使用<code>post</code>请求，这个要视情况而定</p><p>参考资料：https://www.runoob.com/http/http-methods.html</p></li><li><p><strong>请求头常用参数</strong></p><p>在<code>http</code>协议中，向服务器发送一个请求，数据分为三部分：第一个是把数据放在<code>url</code>中，第二个是把数据放在<code>body</code>中（在<code>post</code>请求中），第三个就是把数据放在<code>head</code>中</p><p>网络爬虫中常用的请求头参数：</p><p><code>User-Agent</code>：浏览器名称。请求网页的时候，服务器通过这个参数就可以知道这个请求是由哪种浏览器发送的。通过爬虫发送的请求，<code>User-Agent</code>的值是<code>Python</code>，这对于有反爬虫机制的网站来说，可以轻易的判断这个请求是爬虫。因此我们要经常设置这个值为一些浏览器的值，来伪装我们的爬虫</p><p><code>Referer</code>：表明当前请求是从哪个<code>url</code>过来的。如果不是从指定页面过来的，就不做相关的响应</p><p><code>Cookie</code>：<code>http</code>协议是无状态的，同一个人发送两次请求，服务器没有能力知道这两个请求是否来自同一个人，因此就需要用<code>cookie</code>来做标识。一般如果想要做登录后才能访问的网站，就需要发送<code>cookie</code>信息</p></li><li><p><strong>常用响应状态码</strong></p><p><code>200</code>：请求正常，服务器正常返回数据</p><p><code>301</code>：永久重定向。比如在访问www.jingdong.com的时候会重定向到www.jd.com</p><p><code>302</code>：临时重定向。比如在访问需要登录的页面的时候，而此时没有登录，那么就会重定向到登录页面</p><p><code>400</code>：请求的<code>url</code>在服务器上找不到。换句话说就是请求<code>url</code>错误</p><p><code>403</code>：服务器拒绝访问，权限不够</p><p><code>500</code>：服务器内部错误。可能是服务器出bug</p><p>参考资料：https://www.runoob.com/http/http-status-codes.html</p></li></ul>`,2);function w(T,f){const d=p("ExternalLinkIcon");return n(),r("div",null,[i,l,e("ul",null,[e("li",null,[h,g,e("p",null,[o("专业介绍："),e("a",m,[o("百度百科"),s(d)])])]),u]),_])}const P=t(a,[["render",w],["__file","01_爬虫前奏.html.vue"]]);export{P as default};
